2022-08-03 17:48:36,299:INFO:PyCaret Supervised Module
2022-08-03 17:48:36,300:INFO:ML Usecase: regression
2022-08-03 17:48:36,300:INFO:version 2.3.10
2022-08-03 17:48:36,301:INFO:Initializing setup()
2022-08-03 17:48:36,301:INFO:setup(target=Price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=['Carat Weight'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=diamond1, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-08-03 17:48:36,301:INFO:Checking environment
2022-08-03 17:48:36,301:INFO:python_version: 3.8.13
2022-08-03 17:48:36,301:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-08-03 17:48:36,301:INFO:machine: AMD64
2022-08-03 17:48:36,302:INFO:platform: Windows-10-10.0.19044-SP0
2022-08-03 17:48:36,303:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-08-03 17:48:36,303:INFO:Checking libraries
2022-08-03 17:48:36,303:INFO:pd==1.4.2
2022-08-03 17:48:36,303:INFO:numpy==1.19.5
2022-08-03 17:48:36,303:INFO:sklearn==0.23.2
2022-08-03 17:48:36,303:INFO:lightgbm==3.3.2
2022-08-03 17:48:36,668:INFO:catboost==1.0.5
2022-08-03 17:48:36,668:INFO:xgboost==1.6.1
2022-08-03 17:48:36,668:INFO:mlflow==1.25.1
2022-08-03 17:48:36,668:INFO:Checking Exceptions
2022-08-03 17:48:36,668:INFO:Declaring global variables
2022-08-03 17:48:36,668:INFO:USI: d09f
2022-08-03 17:48:36,668:INFO:pycaret_globals: {'experiment__', 'fold_groups_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'display_container', 'html_param', '_all_models_internal', 'X_test', 'X', 'target_param', 'pycaret_globals', 'prep_pipe', 'seed', 'y_train', 'USI', 'logging_param', 'fold_param', 'gpu_param', '_gpu_n_jobs_param', '_all_models', 'stratify_param', 'fold_groups_param_full', 'iterative_imputation_iters_param', 'master_model_container', 'transform_target_param', 'n_jobs_param', '_internal_pipeline', 'fix_imbalance_param', 'fold_generator', 'dashboard_logger', 'X_train', '_available_plots', '_all_metrics', 'data_before_preprocess', 'y', 'create_model_container', 'fold_shuffle_param', 'exp_name_log', 'y_test', 'fix_imbalance_method_param', 'imputation_regressor', 'imputation_classifier'}
2022-08-03 17:48:36,668:INFO:Preparing display monitor
2022-08-03 17:48:36,668:INFO:Preparing display monitor
2022-08-03 17:48:36,683:INFO:Importing libraries
2022-08-03 17:48:36,684:INFO:Copying data for preprocessing
2022-08-03 17:48:36,695:INFO:Declaring preprocessing parameters
2022-08-03 17:48:36,697:INFO:Creating preprocessing pipeline
2022-08-03 17:48:36,705:INFO:Preprocessing pipeline created successfully
2022-08-03 17:48:36,706:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-08-03 17:48:36,706:INFO:Creating global containers
2022-08-03 17:48:36,709:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-08-03 17:48:38,641:INFO:Creating grid variables
2022-08-03 17:48:38,662:INFO:Logging experiment in MLFlow
2022-08-03 17:48:39,188:INFO:SubProcess save_model() called ==================================
2022-08-03 17:48:39,206:INFO:Initializing save_model()
2022-08-03 17:48:39,206:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-08-03 17:48:39,206:INFO:Adding model into prep_pipe
2022-08-03 17:48:39,209:WARNING:Only Model saved as it was a pipeline.
2022-08-03 17:48:39,219:INFO:Transformation Pipeline.pkl saved in current working directory
2022-08-03 17:48:39,228:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-08-03 17:48:39,228:INFO:save_model() successfully completed......................................
2022-08-03 17:48:39,376:INFO:SubProcess save_model() end ==================================
2022-08-03 17:48:39,555:INFO:create_model_container: 0
2022-08-03 17:48:39,555:INFO:master_model_container: 0
2022-08-03 17:48:39,555:INFO:display_container: 1
2022-08-03 17:48:39,565:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-08-03 17:48:39,565:INFO:setup() succesfully completed......................................
2022-08-03 17:48:39,694:INFO:Initializing compare_models()
2022-08-03 17:48:39,694:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=['ransac'])
2022-08-03 17:48:39,694:INFO:Checking exceptions
2022-08-03 17:48:39,695:INFO:Preparing display monitor
2022-08-03 17:48:39,695:INFO:Preparing display monitor
2022-08-03 17:48:39,738:INFO:Initializing Linear Regression
2022-08-03 17:48:39,738:INFO:Total runtime is 0.0 minutes
2022-08-03 17:48:39,751:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:39,752:INFO:Initializing create_model()
2022-08-03 17:48:39,752:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:39,752:INFO:Checking exceptions
2022-08-03 17:48:39,752:INFO:Importing libraries
2022-08-03 17:48:39,752:INFO:Copying training dataset
2022-08-03 17:48:39,754:INFO:Defining folds
2022-08-03 17:48:39,754:INFO:Declaring metric variables
2022-08-03 17:48:39,765:INFO:Importing untrained model
2022-08-03 17:48:39,775:INFO:Linear Regression Imported succesfully
2022-08-03 17:48:39,797:INFO:Starting cross validation
2022-08-03 17:48:39,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:43,868:INFO:Calculating mean and std
2022-08-03 17:48:43,869:INFO:Creating metrics dataframe
2022-08-03 17:48:43,928:INFO:Uploading results into container
2022-08-03 17:48:43,928:INFO:Uploading model into container now
2022-08-03 17:48:43,928:INFO:create_model_container: 1
2022-08-03 17:48:43,928:INFO:master_model_container: 1
2022-08-03 17:48:43,928:INFO:display_container: 2
2022-08-03 17:48:43,929:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2022-08-03 17:48:43,929:INFO:create_model() succesfully completed......................................
2022-08-03 17:48:44,041:INFO:SubProcess create_model() end ==================================
2022-08-03 17:48:44,041:INFO:Creating metrics dataframe
2022-08-03 17:48:44,078:INFO:Initializing Lasso Regression
2022-08-03 17:48:44,078:INFO:Total runtime is 0.07234336932500203 minutes
2022-08-03 17:48:44,087:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:44,087:INFO:Initializing create_model()
2022-08-03 17:48:44,088:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:44,088:INFO:Checking exceptions
2022-08-03 17:48:44,088:INFO:Importing libraries
2022-08-03 17:48:44,088:INFO:Copying training dataset
2022-08-03 17:48:44,090:INFO:Defining folds
2022-08-03 17:48:44,090:INFO:Declaring metric variables
2022-08-03 17:48:44,100:INFO:Importing untrained model
2022-08-03 17:48:44,112:INFO:Lasso Regression Imported succesfully
2022-08-03 17:48:44,132:INFO:Starting cross validation
2022-08-03 17:48:44,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:44,228:INFO:Calculating mean and std
2022-08-03 17:48:44,229:INFO:Creating metrics dataframe
2022-08-03 17:48:44,254:INFO:Uploading results into container
2022-08-03 17:48:44,255:INFO:Uploading model into container now
2022-08-03 17:48:44,255:INFO:create_model_container: 2
2022-08-03 17:48:44,255:INFO:master_model_container: 2
2022-08-03 17:48:44,255:INFO:display_container: 2
2022-08-03 17:48:44,257:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-08-03 17:48:44,257:INFO:create_model() succesfully completed......................................
2022-08-03 17:48:44,372:INFO:SubProcess create_model() end ==================================
2022-08-03 17:48:44,372:INFO:Creating metrics dataframe
2022-08-03 17:48:44,404:INFO:Initializing Ridge Regression
2022-08-03 17:48:44,404:INFO:Total runtime is 0.07777591546376546 minutes
2022-08-03 17:48:44,415:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:44,416:INFO:Initializing create_model()
2022-08-03 17:48:44,416:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:44,416:INFO:Checking exceptions
2022-08-03 17:48:44,416:INFO:Importing libraries
2022-08-03 17:48:44,416:INFO:Copying training dataset
2022-08-03 17:48:44,417:INFO:Defining folds
2022-08-03 17:48:44,417:INFO:Declaring metric variables
2022-08-03 17:48:44,429:INFO:Importing untrained model
2022-08-03 17:48:44,438:INFO:Ridge Regression Imported succesfully
2022-08-03 17:48:44,459:INFO:Starting cross validation
2022-08-03 17:48:44,461:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:44,552:INFO:Calculating mean and std
2022-08-03 17:48:44,552:INFO:Creating metrics dataframe
2022-08-03 17:48:44,582:INFO:Uploading results into container
2022-08-03 17:48:44,582:INFO:Uploading model into container now
2022-08-03 17:48:44,582:INFO:create_model_container: 3
2022-08-03 17:48:44,582:INFO:master_model_container: 3
2022-08-03 17:48:44,583:INFO:display_container: 2
2022-08-03 17:48:44,584:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2022-08-03 17:48:44,584:INFO:create_model() succesfully completed......................................
2022-08-03 17:48:44,697:INFO:SubProcess create_model() end ==================================
2022-08-03 17:48:44,698:INFO:Creating metrics dataframe
2022-08-03 17:48:44,739:INFO:Initializing Elastic Net
2022-08-03 17:48:44,739:INFO:Total runtime is 0.08335926532745361 minutes
2022-08-03 17:48:44,753:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:44,754:INFO:Initializing create_model()
2022-08-03 17:48:44,754:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:44,755:INFO:Checking exceptions
2022-08-03 17:48:44,755:INFO:Importing libraries
2022-08-03 17:48:44,755:INFO:Copying training dataset
2022-08-03 17:48:44,757:INFO:Defining folds
2022-08-03 17:48:44,757:INFO:Declaring metric variables
2022-08-03 17:48:44,769:INFO:Importing untrained model
2022-08-03 17:48:44,781:INFO:Elastic Net Imported succesfully
2022-08-03 17:48:44,803:INFO:Starting cross validation
2022-08-03 17:48:44,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:44,913:INFO:Calculating mean and std
2022-08-03 17:48:44,914:INFO:Creating metrics dataframe
2022-08-03 17:48:44,959:INFO:Uploading results into container
2022-08-03 17:48:44,960:INFO:Uploading model into container now
2022-08-03 17:48:44,960:INFO:create_model_container: 4
2022-08-03 17:48:44,961:INFO:master_model_container: 4
2022-08-03 17:48:44,961:INFO:display_container: 2
2022-08-03 17:48:44,963:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-08-03 17:48:44,963:INFO:create_model() succesfully completed......................................
2022-08-03 17:48:45,084:INFO:SubProcess create_model() end ==================================
2022-08-03 17:48:45,084:INFO:Creating metrics dataframe
2022-08-03 17:48:45,119:INFO:Initializing Least Angle Regression
2022-08-03 17:48:45,119:INFO:Total runtime is 0.08969317277272541 minutes
2022-08-03 17:48:45,130:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:45,131:INFO:Initializing create_model()
2022-08-03 17:48:45,131:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:45,131:INFO:Checking exceptions
2022-08-03 17:48:45,131:INFO:Importing libraries
2022-08-03 17:48:45,131:INFO:Copying training dataset
2022-08-03 17:48:45,132:INFO:Defining folds
2022-08-03 17:48:45,133:INFO:Declaring metric variables
2022-08-03 17:48:45,144:INFO:Importing untrained model
2022-08-03 17:48:45,153:INFO:Least Angle Regression Imported succesfully
2022-08-03 17:48:45,176:INFO:Starting cross validation
2022-08-03 17:48:45,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:46,169:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-08-03 17:48:46,176:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-08-03 17:48:46,176:INFO:Initializing create_model()
2022-08-03 17:48:46,176:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:46,177:INFO:Checking exceptions
2022-08-03 17:48:46,177:INFO:Importing libraries
2022-08-03 17:48:46,177:INFO:Copying training dataset
2022-08-03 17:48:46,177:INFO:Defining folds
2022-08-03 17:48:46,178:INFO:Declaring metric variables
2022-08-03 17:48:46,185:INFO:Importing untrained model
2022-08-03 17:48:46,196:INFO:Least Angle Regression Imported succesfully
2022-08-03 17:48:46,218:INFO:Starting cross validation
2022-08-03 17:48:46,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:48:59,157:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-08-03 17:48:59,159:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-08-03 17:48:59,159:INFO:Initializing Lasso Least Angle Regression
2022-08-03 17:48:59,159:INFO:Total runtime is 0.32367881139119464 minutes
2022-08-03 17:48:59,177:INFO:SubProcess create_model() called ==================================
2022-08-03 17:48:59,178:INFO:Initializing create_model()
2022-08-03 17:48:59,179:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:48:59,179:INFO:Checking exceptions
2022-08-03 17:48:59,179:INFO:Importing libraries
2022-08-03 17:48:59,179:INFO:Copying training dataset
2022-08-03 17:48:59,181:INFO:Defining folds
2022-08-03 17:48:59,182:INFO:Declaring metric variables
2022-08-03 17:48:59,201:INFO:Importing untrained model
2022-08-03 17:48:59,224:INFO:Lasso Least Angle Regression Imported succesfully
2022-08-03 17:48:59,253:INFO:Starting cross validation
2022-08-03 17:48:59,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:11,360:INFO:Calculating mean and std
2022-08-03 17:49:11,362:INFO:Creating metrics dataframe
2022-08-03 17:49:11,405:INFO:Uploading results into container
2022-08-03 17:49:11,405:INFO:Uploading model into container now
2022-08-03 17:49:11,405:INFO:create_model_container: 5
2022-08-03 17:49:11,406:INFO:master_model_container: 5
2022-08-03 17:49:11,406:INFO:display_container: 2
2022-08-03 17:49:11,408:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2022-08-03 17:49:11,408:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:11,559:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:11,560:INFO:Creating metrics dataframe
2022-08-03 17:49:11,603:INFO:Initializing Orthogonal Matching Pursuit
2022-08-03 17:49:11,604:INFO:Total runtime is 0.5311022321383159 minutes
2022-08-03 17:49:11,621:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:11,622:INFO:Initializing create_model()
2022-08-03 17:49:11,622:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:11,622:INFO:Checking exceptions
2022-08-03 17:49:11,622:INFO:Importing libraries
2022-08-03 17:49:11,622:INFO:Copying training dataset
2022-08-03 17:49:11,624:INFO:Defining folds
2022-08-03 17:49:11,624:INFO:Declaring metric variables
2022-08-03 17:49:11,640:INFO:Importing untrained model
2022-08-03 17:49:11,657:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-08-03 17:49:11,690:INFO:Starting cross validation
2022-08-03 17:49:11,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:11,826:INFO:Calculating mean and std
2022-08-03 17:49:11,827:INFO:Creating metrics dataframe
2022-08-03 17:49:11,859:INFO:Uploading results into container
2022-08-03 17:49:11,860:INFO:Uploading model into container now
2022-08-03 17:49:11,860:INFO:create_model_container: 6
2022-08-03 17:49:11,860:INFO:master_model_container: 6
2022-08-03 17:49:11,860:INFO:display_container: 2
2022-08-03 17:49:11,862:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2022-08-03 17:49:11,862:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:11,997:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:11,997:INFO:Creating metrics dataframe
2022-08-03 17:49:12,043:INFO:Initializing Bayesian Ridge
2022-08-03 17:49:12,043:INFO:Total runtime is 0.5384190758069357 minutes
2022-08-03 17:49:12,057:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:12,058:INFO:Initializing create_model()
2022-08-03 17:49:12,058:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:12,059:INFO:Checking exceptions
2022-08-03 17:49:12,059:INFO:Importing libraries
2022-08-03 17:49:12,059:INFO:Copying training dataset
2022-08-03 17:49:12,061:INFO:Defining folds
2022-08-03 17:49:12,061:INFO:Declaring metric variables
2022-08-03 17:49:12,076:INFO:Importing untrained model
2022-08-03 17:49:12,092:INFO:Bayesian Ridge Imported succesfully
2022-08-03 17:49:12,124:INFO:Starting cross validation
2022-08-03 17:49:12,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:12,287:INFO:Calculating mean and std
2022-08-03 17:49:12,289:INFO:Creating metrics dataframe
2022-08-03 17:49:12,326:INFO:Uploading results into container
2022-08-03 17:49:12,326:INFO:Uploading model into container now
2022-08-03 17:49:12,326:INFO:create_model_container: 7
2022-08-03 17:49:12,326:INFO:master_model_container: 7
2022-08-03 17:49:12,326:INFO:display_container: 2
2022-08-03 17:49:12,328:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2022-08-03 17:49:12,328:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:12,459:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:12,459:INFO:Creating metrics dataframe
2022-08-03 17:49:12,503:INFO:Initializing Passive Aggressive Regressor
2022-08-03 17:49:12,504:INFO:Total runtime is 0.5460859457651774 minutes
2022-08-03 17:49:12,518:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:12,519:INFO:Initializing create_model()
2022-08-03 17:49:12,519:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:12,519:INFO:Checking exceptions
2022-08-03 17:49:12,519:INFO:Importing libraries
2022-08-03 17:49:12,519:INFO:Copying training dataset
2022-08-03 17:49:12,522:INFO:Defining folds
2022-08-03 17:49:12,523:INFO:Declaring metric variables
2022-08-03 17:49:12,546:INFO:Importing untrained model
2022-08-03 17:49:12,565:INFO:Passive Aggressive Regressor Imported succesfully
2022-08-03 17:49:12,606:INFO:Starting cross validation
2022-08-03 17:49:12,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:12,853:INFO:Calculating mean and std
2022-08-03 17:49:12,855:INFO:Creating metrics dataframe
2022-08-03 17:49:12,893:INFO:Uploading results into container
2022-08-03 17:49:12,894:INFO:Uploading model into container now
2022-08-03 17:49:12,894:INFO:create_model_container: 8
2022-08-03 17:49:12,894:INFO:master_model_container: 8
2022-08-03 17:49:12,894:INFO:display_container: 2
2022-08-03 17:49:12,896:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-08-03 17:49:12,896:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:13,031:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:13,031:INFO:Creating metrics dataframe
2022-08-03 17:49:13,080:INFO:Initializing Huber Regressor
2022-08-03 17:49:13,081:INFO:Total runtime is 0.5557107051213582 minutes
2022-08-03 17:49:13,096:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:13,096:INFO:Initializing create_model()
2022-08-03 17:49:13,096:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:13,096:INFO:Checking exceptions
2022-08-03 17:49:13,097:INFO:Importing libraries
2022-08-03 17:49:13,097:INFO:Copying training dataset
2022-08-03 17:49:13,098:INFO:Defining folds
2022-08-03 17:49:13,099:INFO:Declaring metric variables
2022-08-03 17:49:13,113:INFO:Importing untrained model
2022-08-03 17:49:13,130:INFO:Huber Regressor Imported succesfully
2022-08-03 17:49:13,162:INFO:Starting cross validation
2022-08-03 17:49:13,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:14,460:INFO:Calculating mean and std
2022-08-03 17:49:14,461:INFO:Creating metrics dataframe
2022-08-03 17:49:14,496:INFO:Uploading results into container
2022-08-03 17:49:14,497:INFO:Uploading model into container now
2022-08-03 17:49:14,497:INFO:create_model_container: 9
2022-08-03 17:49:14,497:INFO:master_model_container: 9
2022-08-03 17:49:14,497:INFO:display_container: 2
2022-08-03 17:49:14,498:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2022-08-03 17:49:14,498:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:14,638:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:14,638:INFO:Creating metrics dataframe
2022-08-03 17:49:14,690:INFO:Initializing K Neighbors Regressor
2022-08-03 17:49:14,690:INFO:Total runtime is 0.5825278997421265 minutes
2022-08-03 17:49:14,705:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:14,706:INFO:Initializing create_model()
2022-08-03 17:49:14,706:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:14,706:INFO:Checking exceptions
2022-08-03 17:49:14,707:INFO:Importing libraries
2022-08-03 17:49:14,707:INFO:Copying training dataset
2022-08-03 17:49:14,708:INFO:Defining folds
2022-08-03 17:49:14,709:INFO:Declaring metric variables
2022-08-03 17:49:14,724:INFO:Importing untrained model
2022-08-03 17:49:14,743:INFO:K Neighbors Regressor Imported succesfully
2022-08-03 17:49:14,775:INFO:Starting cross validation
2022-08-03 17:49:14,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:15,455:INFO:Calculating mean and std
2022-08-03 17:49:15,457:INFO:Creating metrics dataframe
2022-08-03 17:49:15,501:INFO:Uploading results into container
2022-08-03 17:49:15,502:INFO:Uploading model into container now
2022-08-03 17:49:15,503:INFO:create_model_container: 10
2022-08-03 17:49:15,503:INFO:master_model_container: 10
2022-08-03 17:49:15,503:INFO:display_container: 2
2022-08-03 17:49:15,506:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2022-08-03 17:49:15,506:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:15,640:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:15,640:INFO:Creating metrics dataframe
2022-08-03 17:49:15,689:INFO:Initializing Decision Tree Regressor
2022-08-03 17:49:15,689:INFO:Total runtime is 0.599177896976471 minutes
2022-08-03 17:49:15,705:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:15,706:INFO:Initializing create_model()
2022-08-03 17:49:15,706:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:15,706:INFO:Checking exceptions
2022-08-03 17:49:15,706:INFO:Importing libraries
2022-08-03 17:49:15,707:INFO:Copying training dataset
2022-08-03 17:49:15,708:INFO:Defining folds
2022-08-03 17:49:15,708:INFO:Declaring metric variables
2022-08-03 17:49:15,724:INFO:Importing untrained model
2022-08-03 17:49:15,742:INFO:Decision Tree Regressor Imported succesfully
2022-08-03 17:49:15,774:INFO:Starting cross validation
2022-08-03 17:49:15,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:15,962:INFO:Calculating mean and std
2022-08-03 17:49:15,965:INFO:Creating metrics dataframe
2022-08-03 17:49:16,019:INFO:Uploading results into container
2022-08-03 17:49:16,020:INFO:Uploading model into container now
2022-08-03 17:49:16,020:INFO:create_model_container: 11
2022-08-03 17:49:16,020:INFO:master_model_container: 11
2022-08-03 17:49:16,021:INFO:display_container: 2
2022-08-03 17:49:16,025:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2022-08-03 17:49:16,025:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:16,158:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:16,158:INFO:Creating metrics dataframe
2022-08-03 17:49:16,200:INFO:Initializing Random Forest Regressor
2022-08-03 17:49:16,200:INFO:Total runtime is 0.6076940337816874 minutes
2022-08-03 17:49:16,216:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:16,217:INFO:Initializing create_model()
2022-08-03 17:49:16,218:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:16,218:INFO:Checking exceptions
2022-08-03 17:49:16,218:INFO:Importing libraries
2022-08-03 17:49:16,219:INFO:Copying training dataset
2022-08-03 17:49:16,220:INFO:Defining folds
2022-08-03 17:49:16,221:INFO:Declaring metric variables
2022-08-03 17:49:16,236:INFO:Importing untrained model
2022-08-03 17:49:16,249:INFO:Random Forest Regressor Imported succesfully
2022-08-03 17:49:16,286:INFO:Starting cross validation
2022-08-03 17:49:16,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:20,787:INFO:Calculating mean and std
2022-08-03 17:49:20,789:INFO:Creating metrics dataframe
2022-08-03 17:49:20,855:INFO:Uploading results into container
2022-08-03 17:49:20,855:INFO:Uploading model into container now
2022-08-03 17:49:20,856:INFO:create_model_container: 12
2022-08-03 17:49:20,856:INFO:master_model_container: 12
2022-08-03 17:49:20,856:INFO:display_container: 2
2022-08-03 17:49:20,861:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2022-08-03 17:49:20,862:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:21,044:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:21,045:INFO:Creating metrics dataframe
2022-08-03 17:49:21,120:INFO:Initializing Extra Trees Regressor
2022-08-03 17:49:21,120:INFO:Total runtime is 0.6896942138671875 minutes
2022-08-03 17:49:21,138:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:21,139:INFO:Initializing create_model()
2022-08-03 17:49:21,139:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:21,140:INFO:Checking exceptions
2022-08-03 17:49:21,140:INFO:Importing libraries
2022-08-03 17:49:21,140:INFO:Copying training dataset
2022-08-03 17:49:21,142:INFO:Defining folds
2022-08-03 17:49:21,143:INFO:Declaring metric variables
2022-08-03 17:49:21,168:INFO:Importing untrained model
2022-08-03 17:49:21,192:INFO:Extra Trees Regressor Imported succesfully
2022-08-03 17:49:21,237:INFO:Starting cross validation
2022-08-03 17:49:21,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:26,868:INFO:Calculating mean and std
2022-08-03 17:49:26,870:INFO:Creating metrics dataframe
2022-08-03 17:49:26,935:INFO:Uploading results into container
2022-08-03 17:49:26,935:INFO:Uploading model into container now
2022-08-03 17:49:26,936:INFO:create_model_container: 13
2022-08-03 17:49:26,936:INFO:master_model_container: 13
2022-08-03 17:49:26,936:INFO:display_container: 2
2022-08-03 17:49:26,940:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2022-08-03 17:49:26,941:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:27,086:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:27,086:INFO:Creating metrics dataframe
2022-08-03 17:49:27,160:INFO:Initializing AdaBoost Regressor
2022-08-03 17:49:27,161:INFO:Total runtime is 0.790393622716268 minutes
2022-08-03 17:49:27,191:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:27,192:INFO:Initializing create_model()
2022-08-03 17:49:27,192:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:27,192:INFO:Checking exceptions
2022-08-03 17:49:27,192:INFO:Importing libraries
2022-08-03 17:49:27,193:INFO:Copying training dataset
2022-08-03 17:49:27,194:INFO:Defining folds
2022-08-03 17:49:27,195:INFO:Declaring metric variables
2022-08-03 17:49:27,219:INFO:Importing untrained model
2022-08-03 17:49:27,235:INFO:AdaBoost Regressor Imported succesfully
2022-08-03 17:49:27,267:INFO:Starting cross validation
2022-08-03 17:49:27,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:28,907:INFO:Calculating mean and std
2022-08-03 17:49:28,908:INFO:Creating metrics dataframe
2022-08-03 17:49:28,953:INFO:Uploading results into container
2022-08-03 17:49:28,953:INFO:Uploading model into container now
2022-08-03 17:49:28,954:INFO:create_model_container: 14
2022-08-03 17:49:28,954:INFO:master_model_container: 14
2022-08-03 17:49:28,954:INFO:display_container: 2
2022-08-03 17:49:28,956:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2022-08-03 17:49:28,956:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:29,140:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:29,141:INFO:Creating metrics dataframe
2022-08-03 17:49:29,189:INFO:Initializing Gradient Boosting Regressor
2022-08-03 17:49:29,189:INFO:Total runtime is 0.8241856614748638 minutes
2022-08-03 17:49:29,210:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:29,211:INFO:Initializing create_model()
2022-08-03 17:49:29,212:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:29,212:INFO:Checking exceptions
2022-08-03 17:49:29,212:INFO:Importing libraries
2022-08-03 17:49:29,213:INFO:Copying training dataset
2022-08-03 17:49:29,215:INFO:Defining folds
2022-08-03 17:49:29,216:INFO:Declaring metric variables
2022-08-03 17:49:29,235:INFO:Importing untrained model
2022-08-03 17:49:29,252:INFO:Gradient Boosting Regressor Imported succesfully
2022-08-03 17:49:29,281:INFO:Starting cross validation
2022-08-03 17:49:29,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:30,853:INFO:Calculating mean and std
2022-08-03 17:49:30,854:INFO:Creating metrics dataframe
2022-08-03 17:49:30,889:INFO:Uploading results into container
2022-08-03 17:49:30,889:INFO:Uploading model into container now
2022-08-03 17:49:30,889:INFO:create_model_container: 15
2022-08-03 17:49:30,889:INFO:master_model_container: 15
2022-08-03 17:49:30,890:INFO:display_container: 2
2022-08-03 17:49:30,893:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-08-03 17:49:30,893:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:31,030:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:31,031:INFO:Creating metrics dataframe
2022-08-03 17:49:31,076:INFO:Initializing Extreme Gradient Boosting
2022-08-03 17:49:31,076:INFO:Total runtime is 0.8556356906890871 minutes
2022-08-03 17:49:31,093:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:31,093:INFO:Initializing create_model()
2022-08-03 17:49:31,094:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:31,094:INFO:Checking exceptions
2022-08-03 17:49:31,094:INFO:Importing libraries
2022-08-03 17:49:31,095:INFO:Copying training dataset
2022-08-03 17:49:31,097:INFO:Defining folds
2022-08-03 17:49:31,097:INFO:Declaring metric variables
2022-08-03 17:49:31,109:INFO:Importing untrained model
2022-08-03 17:49:31,126:INFO:Extreme Gradient Boosting Imported succesfully
2022-08-03 17:49:31,163:INFO:Starting cross validation
2022-08-03 17:49:31,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:34,408:INFO:Calculating mean and std
2022-08-03 17:49:34,409:INFO:Creating metrics dataframe
2022-08-03 17:49:34,444:INFO:Uploading results into container
2022-08-03 17:49:34,444:INFO:Uploading model into container now
2022-08-03 17:49:34,444:INFO:create_model_container: 16
2022-08-03 17:49:34,445:INFO:master_model_container: 16
2022-08-03 17:49:34,445:INFO:display_container: 2
2022-08-03 17:49:34,448:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                callbacks=None, colsample_bylevel=None,
                                colsample_bynode=None, colsample_bytree=None,
                                early_stopping_rounds=None,
                                enable_categorical=False, eval_metric=None,
                                gamma=None, gpu_id=None, grow_policy=None,
                                importance_type=None,
                                interaction_constraints=None,
                                learning_rate=None, max_bin=None,
                                max_cat_to_onehot=None, max_delta_step=None,
                                max_depth=None, max_leaves=None,
                                min_child_weight=None, missing=nan,
                                monotone_constraints=None, n_estimators=100,
                                n_jobs=-1, num_parallel_tree=None,
                                objective='reg:squarederror',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                predictor=None, ...)
2022-08-03 17:49:34,448:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:34,602:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:34,602:INFO:Creating metrics dataframe
2022-08-03 17:49:34,653:INFO:Initializing Light Gradient Boosting Machine
2022-08-03 17:49:34,654:INFO:Total runtime is 0.9152715802192689 minutes
2022-08-03 17:49:34,668:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:34,669:INFO:Initializing create_model()
2022-08-03 17:49:34,669:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:34,669:INFO:Checking exceptions
2022-08-03 17:49:34,669:INFO:Importing libraries
2022-08-03 17:49:34,669:INFO:Copying training dataset
2022-08-03 17:49:34,671:INFO:Defining folds
2022-08-03 17:49:34,672:INFO:Declaring metric variables
2022-08-03 17:49:34,685:INFO:Importing untrained model
2022-08-03 17:49:34,702:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-03 17:49:34,733:INFO:Starting cross validation
2022-08-03 17:49:34,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:35,400:INFO:Calculating mean and std
2022-08-03 17:49:35,401:INFO:Creating metrics dataframe
2022-08-03 17:49:35,432:INFO:Uploading results into container
2022-08-03 17:49:35,433:INFO:Uploading model into container now
2022-08-03 17:49:35,433:INFO:create_model_container: 17
2022-08-03 17:49:35,433:INFO:master_model_container: 17
2022-08-03 17:49:35,433:INFO:display_container: 2
2022-08-03 17:49:35,436:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-03 17:49:35,436:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:35,575:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:35,576:INFO:Creating metrics dataframe
2022-08-03 17:49:35,628:INFO:Initializing CatBoost Regressor
2022-08-03 17:49:35,629:INFO:Total runtime is 0.9315126578013103 minutes
2022-08-03 17:49:35,649:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:35,650:INFO:Initializing create_model()
2022-08-03 17:49:35,650:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:35,651:INFO:Checking exceptions
2022-08-03 17:49:35,651:INFO:Importing libraries
2022-08-03 17:49:35,651:INFO:Copying training dataset
2022-08-03 17:49:35,653:INFO:Defining folds
2022-08-03 17:49:35,654:INFO:Declaring metric variables
2022-08-03 17:49:35,675:INFO:Importing untrained model
2022-08-03 17:49:35,695:INFO:CatBoost Regressor Imported succesfully
2022-08-03 17:49:35,733:INFO:Starting cross validation
2022-08-03 17:49:35,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:44,533:INFO:Calculating mean and std
2022-08-03 17:49:44,535:INFO:Creating metrics dataframe
2022-08-03 17:49:44,576:INFO:Uploading results into container
2022-08-03 17:49:44,576:INFO:Uploading model into container now
2022-08-03 17:49:44,577:INFO:create_model_container: 18
2022-08-03 17:49:44,577:INFO:master_model_container: 18
2022-08-03 17:49:44,577:INFO:display_container: 2
2022-08-03 17:49:44,577:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226A9BF7400>,
                                task_type='CPU', verbose=False)
2022-08-03 17:49:44,578:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:44,720:WARNING:create_model() for PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226A9BF7400>,
                                task_type='CPU', verbose=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2022-08-03 17:49:44,721:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 2205, in compare_models
    assert np.sum(model_results.iloc[0]) != 0.0
AssertionError

2022-08-03 17:49:44,721:INFO:Initializing create_model()
2022-08-03 17:49:44,721:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:44,721:INFO:Checking exceptions
2022-08-03 17:49:44,722:INFO:Importing libraries
2022-08-03 17:49:44,722:INFO:Copying training dataset
2022-08-03 17:49:44,723:INFO:Defining folds
2022-08-03 17:49:44,723:INFO:Declaring metric variables
2022-08-03 17:49:44,737:INFO:Importing untrained model
2022-08-03 17:49:44,751:INFO:CatBoost Regressor Imported succesfully
2022-08-03 17:49:44,784:INFO:Starting cross validation
2022-08-03 17:49:44,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:54,812:INFO:Calculating mean and std
2022-08-03 17:49:54,812:INFO:Creating metrics dataframe
2022-08-03 17:49:54,851:INFO:Uploading results into container
2022-08-03 17:49:54,851:INFO:Uploading model into container now
2022-08-03 17:49:54,851:INFO:create_model_container: 19
2022-08-03 17:49:54,851:INFO:master_model_container: 19
2022-08-03 17:49:54,852:INFO:display_container: 2
2022-08-03 17:49:54,852:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226A9B78340>,
                                task_type='CPU', verbose=False)
2022-08-03 17:49:54,852:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:54,997:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:54,997:INFO:Creating metrics dataframe
2022-08-03 17:49:55,046:INFO:Initializing Dummy Regressor
2022-08-03 17:49:55,046:INFO:Total runtime is 1.2551311453183494 minutes
2022-08-03 17:49:55,062:INFO:SubProcess create_model() called ==================================
2022-08-03 17:49:55,063:INFO:Initializing create_model()
2022-08-03 17:49:55,064:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3CD0>, return_train_score=False, kwargs={})
2022-08-03 17:49:55,064:INFO:Checking exceptions
2022-08-03 17:49:55,064:INFO:Importing libraries
2022-08-03 17:49:55,064:INFO:Copying training dataset
2022-08-03 17:49:55,065:INFO:Defining folds
2022-08-03 17:49:55,065:INFO:Declaring metric variables
2022-08-03 17:49:55,082:INFO:Importing untrained model
2022-08-03 17:49:55,099:INFO:Dummy Regressor Imported succesfully
2022-08-03 17:49:55,131:INFO:Starting cross validation
2022-08-03 17:49:55,132:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:49:55,303:INFO:Calculating mean and std
2022-08-03 17:49:55,304:INFO:Creating metrics dataframe
2022-08-03 17:49:55,349:INFO:Uploading results into container
2022-08-03 17:49:55,349:INFO:Uploading model into container now
2022-08-03 17:49:55,350:INFO:create_model_container: 20
2022-08-03 17:49:55,350:INFO:master_model_container: 20
2022-08-03 17:49:55,350:INFO:display_container: 2
2022-08-03 17:49:55,350:INFO:PowerTransformedTargetRegressor(constant=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                quantile=None,
                                regressor=DummyRegressor(constant=None,
                                                         quantile=None,
                                                         strategy='mean'),
                                strategy='mean')
2022-08-03 17:49:55,350:INFO:create_model() succesfully completed......................................
2022-08-03 17:49:55,483:INFO:SubProcess create_model() end ==================================
2022-08-03 17:49:55,484:INFO:Creating metrics dataframe
2022-08-03 17:49:55,571:INFO:Initializing create_model()
2022-08-03 17:49:55,571:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226A9B78340>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-03 17:49:55,572:INFO:Checking exceptions
2022-08-03 17:49:55,572:INFO:Importing libraries
2022-08-03 17:49:55,573:INFO:Copying training dataset
2022-08-03 17:49:55,574:INFO:Defining folds
2022-08-03 17:49:55,575:INFO:Declaring metric variables
2022-08-03 17:49:55,575:INFO:Importing untrained model
2022-08-03 17:49:55,575:INFO:Declaring custom model
2022-08-03 17:49:55,576:INFO:CatBoost Regressor Imported succesfully
2022-08-03 17:49:55,577:INFO:Cross validation set to False
2022-08-03 17:49:55,577:INFO:Fitting Model
2022-08-03 17:49:58,538:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF316670>,
                                task_type='CPU', verbose=False)
2022-08-03 17:49:58,538:INFO:create_models() succesfully completed......................................
2022-08-03 17:49:58,682:INFO:Creating Dashboard logs
2022-08-03 17:49:58,694:INFO:Model: CatBoost Regressor
2022-08-03 17:49:58,756:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.050512999296188354, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2022-08-03 17:49:58,843:INFO:Initializing predict_model()
2022-08-03 17:49:58,843:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF316670>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-03 17:49:58,843:INFO:Checking exceptions
2022-08-03 17:49:58,843:INFO:Preloading libraries
2022-08-03 17:49:59,468:INFO:Creating Dashboard logs
2022-08-03 17:49:59,482:INFO:Model: Extreme Gradient Boosting
2022-08-03 17:49:59,545:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:49:59,546:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:49:59,546:INFO:logged params: {}
2022-08-03 17:49:59,845:INFO:Creating Dashboard logs
2022-08-03 17:49:59,855:INFO:Model: Light Gradient Boosting Machine
2022-08-03 17:49:59,917:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:49:59,917:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:49:59,917:INFO:logged params: {}
2022-08-03 17:50:00,227:INFO:Creating Dashboard logs
2022-08-03 17:50:00,242:INFO:Model: Random Forest Regressor
2022-08-03 17:50:00,301:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:00,301:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:00,302:INFO:logged params: {}
2022-08-03 17:50:00,594:INFO:Creating Dashboard logs
2022-08-03 17:50:00,604:INFO:Model: Huber Regressor
2022-08-03 17:50:00,665:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:00,666:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:00,666:INFO:logged params: {}
2022-08-03 17:50:00,963:INFO:Creating Dashboard logs
2022-08-03 17:50:00,974:INFO:Model: Ridge Regression
2022-08-03 17:50:01,039:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:01,040:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:01,040:INFO:logged params: {}
2022-08-03 17:50:01,354:INFO:Creating Dashboard logs
2022-08-03 17:50:01,367:INFO:Model: Bayesian Ridge
2022-08-03 17:50:01,429:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:01,429:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:01,429:INFO:logged params: {}
2022-08-03 17:50:01,732:INFO:Creating Dashboard logs
2022-08-03 17:50:01,745:INFO:Model: Linear Regression
2022-08-03 17:50:01,812:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:01,812:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:01,812:INFO:logged params: {}
2022-08-03 17:50:02,114:INFO:Creating Dashboard logs
2022-08-03 17:50:02,129:INFO:Model: Extra Trees Regressor
2022-08-03 17:50:02,212:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:02,213:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:02,213:INFO:logged params: {}
2022-08-03 17:50:02,513:INFO:Creating Dashboard logs
2022-08-03 17:50:02,525:INFO:Model: Decision Tree Regressor
2022-08-03 17:50:02,582:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:02,583:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:02,583:INFO:logged params: {}
2022-08-03 17:50:02,883:INFO:Creating Dashboard logs
2022-08-03 17:50:02,897:INFO:Model: Gradient Boosting Regressor
2022-08-03 17:50:02,960:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:02,961:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:02,961:INFO:logged params: {}
2022-08-03 17:50:03,269:INFO:Creating Dashboard logs
2022-08-03 17:50:03,288:INFO:Model: Passive Aggressive Regressor
2022-08-03 17:50:03,349:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:03,349:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:03,349:INFO:logged params: {}
2022-08-03 17:50:03,645:INFO:Creating Dashboard logs
2022-08-03 17:50:03,662:INFO:Model: K Neighbors Regressor
2022-08-03 17:50:03,726:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:03,727:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:03,727:INFO:logged params: {}
2022-08-03 17:50:04,025:INFO:Creating Dashboard logs
2022-08-03 17:50:04,035:INFO:Model: PowerTransformedTargetRegressor
2022-08-03 17:50:04,094:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:04,094:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:04,094:INFO:logged params: {}
2022-08-03 17:50:04,417:INFO:Creating Dashboard logs
2022-08-03 17:50:04,431:INFO:Model: Orthogonal Matching Pursuit
2022-08-03 17:50:04,494:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:04,495:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:04,495:INFO:logged params: {}
2022-08-03 17:50:04,792:INFO:Creating Dashboard logs
2022-08-03 17:50:04,801:INFO:Model: Lasso Regression
2022-08-03 17:50:04,866:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:04,866:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:04,866:INFO:logged params: {}
2022-08-03 17:50:05,160:INFO:Creating Dashboard logs
2022-08-03 17:50:05,170:INFO:Model: Elastic Net
2022-08-03 17:50:05,495:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:05,495:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:05,495:INFO:logged params: {}
2022-08-03 17:50:05,842:INFO:Creating Dashboard logs
2022-08-03 17:50:05,851:INFO:Model: Least Angle Regression
2022-08-03 17:50:05,911:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:05,912:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:05,912:INFO:logged params: {}
2022-08-03 17:50:06,214:INFO:Creating Dashboard logs
2022-08-03 17:50:06,227:INFO:Model: Dummy Regressor
2022-08-03 17:50:06,288:WARNING:Couldn't get params for model. Exception:
2022-08-03 17:50:06,289:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-03 17:50:06,289:INFO:logged params: {}
2022-08-03 17:50:06,635:INFO:create_model_container: 20
2022-08-03 17:50:06,635:INFO:master_model_container: 20
2022-08-03 17:50:06,636:INFO:display_container: 2
2022-08-03 17:50:06,636:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF316670>,
                                task_type='CPU', verbose=False)
2022-08-03 17:50:06,637:INFO:compare_models() succesfully completed......................................
2022-08-03 17:50:06,648:INFO:Initializing tune_model()
2022-08-03 17:50:06,649:INFO:tune_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF316670>,
                                task_type='CPU', verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-08-03 17:50:06,649:INFO:Checking exceptions
2022-08-03 17:50:06,649:INFO:Preparing display monitor
2022-08-03 17:50:06,699:INFO:Copying training dataset
2022-08-03 17:50:06,702:INFO:Checking base model
2022-08-03 17:50:06,703:INFO:Base model : CatBoost Regressor
2022-08-03 17:50:06,723:INFO:Declaring metric variables
2022-08-03 17:50:06,743:INFO:Defining Hyperparameters
2022-08-03 17:50:06,898:INFO:Tuning with n_jobs=-1
2022-08-03 17:50:06,898:INFO:Initializing RandomizedSearchCV
2022-08-03 17:50:24,127:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2022-08-03 17:50:24,128:INFO:Hyperparameter search completed
2022-08-03 17:50:24,128:INFO:SubProcess create_model() called ==================================
2022-08-03 17:50:24,129:INFO:Initializing create_model()
2022-08-03 17:50:24,130:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF343460>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226AFDA3880>, return_train_score=False, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2022-08-03 17:50:24,130:INFO:Checking exceptions
2022-08-03 17:50:24,130:INFO:Importing libraries
2022-08-03 17:50:24,130:INFO:Copying training dataset
2022-08-03 17:50:24,132:INFO:Defining folds
2022-08-03 17:50:24,133:INFO:Declaring metric variables
2022-08-03 17:50:24,158:INFO:Importing untrained model
2022-08-03 17:50:24,158:INFO:Declaring custom model
2022-08-03 17:50:24,181:INFO:CatBoost Regressor Imported succesfully
2022-08-03 17:50:24,226:INFO:Starting cross validation
2022-08-03 17:50:24,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:50:27,337:INFO:Calculating mean and std
2022-08-03 17:50:27,339:INFO:Creating metrics dataframe
2022-08-03 17:50:27,361:INFO:Finalizing model
2022-08-03 17:50:29,205:INFO:Uploading results into container
2022-08-03 17:50:29,205:INFO:Uploading model into container now
2022-08-03 17:50:29,205:INFO:create_model_container: 21
2022-08-03 17:50:29,205:INFO:master_model_container: 21
2022-08-03 17:50:29,205:INFO:display_container: 3
2022-08-03 17:50:29,206:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False)
2022-08-03 17:50:29,206:INFO:create_model() succesfully completed......................................
2022-08-03 17:50:29,349:INFO:SubProcess create_model() end ==================================
2022-08-03 17:50:29,349:INFO:Creating Dashboard logs
2022-08-03 17:50:29,363:INFO:Model: CatBoost Regressor
2022-08-03 17:50:29,422:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 180, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 30, 'random_strength': 0.20000000298023224, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 8, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.4000000059604645, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 256}
2022-08-03 17:50:29,508:INFO:Initializing predict_model()
2022-08-03 17:50:29,508:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-03 17:50:29,509:INFO:Checking exceptions
2022-08-03 17:50:29,509:INFO:Preloading libraries
2022-08-03 17:50:30,088:INFO:create_model_container: 21
2022-08-03 17:50:30,089:INFO:master_model_container: 21
2022-08-03 17:50:30,089:INFO:display_container: 3
2022-08-03 17:50:30,089:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False)
2022-08-03 17:50:30,089:INFO:tune_model() succesfully completed......................................
2022-08-03 17:50:30,259:INFO:Initializing create_model()
2022-08-03 17:50:30,259:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-03 17:50:30,259:INFO:Checking exceptions
2022-08-03 17:50:30,259:INFO:Preparing display monitor
2022-08-03 17:50:30,307:INFO:Importing libraries
2022-08-03 17:50:30,307:INFO:Copying training dataset
2022-08-03 17:50:30,309:INFO:Defining folds
2022-08-03 17:50:30,310:INFO:Declaring metric variables
2022-08-03 17:50:30,326:INFO:Importing untrained model
2022-08-03 17:50:30,348:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-03 17:50:30,382:INFO:Starting cross validation
2022-08-03 17:50:30,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:50:31,014:INFO:Calculating mean and std
2022-08-03 17:50:31,016:INFO:Creating metrics dataframe
2022-08-03 17:50:31,031:INFO:Finalizing model
2022-08-03 17:50:31,370:INFO:Creating Dashboard logs
2022-08-03 17:50:31,394:INFO:Model: Light Gradient Boosting Machine
2022-08-03 17:50:31,484:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-08-03 17:50:31,570:INFO:Initializing predict_model()
2022-08-03 17:50:31,570:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-03 17:50:31,570:INFO:Checking exceptions
2022-08-03 17:50:31,570:INFO:Preloading libraries
2022-08-03 17:50:32,225:INFO:Uploading results into container
2022-08-03 17:50:32,225:INFO:Uploading model into container now
2022-08-03 17:50:32,245:INFO:create_model_container: 22
2022-08-03 17:50:32,245:INFO:master_model_container: 22
2022-08-03 17:50:32,246:INFO:display_container: 4
2022-08-03 17:50:32,252:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-03 17:50:32,252:INFO:create_model() succesfully completed......................................
2022-08-03 17:50:32,452:INFO:Initializing tune_model()
2022-08-03 17:50:32,453:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-08-03 17:50:32,453:INFO:Checking exceptions
2022-08-03 17:50:32,454:INFO:Preparing display monitor
2022-08-03 17:50:32,496:INFO:Copying training dataset
2022-08-03 17:50:32,498:INFO:Checking base model
2022-08-03 17:50:32,499:INFO:Base model : Light Gradient Boosting Machine
2022-08-03 17:50:32,517:INFO:Declaring metric variables
2022-08-03 17:50:32,538:INFO:Defining Hyperparameters
2022-08-03 17:50:32,701:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2022-08-03 17:50:32,701:INFO:Tuning with n_jobs=-1
2022-08-03 17:50:32,702:INFO:Initializing RandomizedSearchCV
2022-08-03 17:50:39,517:INFO:best_params: {'actual_estimator__num_leaves': 30, 'actual_estimator__max_depth': 80, 'actual_estimator__learning_rate': 0.7000000000000001}
2022-08-03 17:50:39,519:INFO:Hyperparameter search completed
2022-08-03 17:50:39,519:INFO:SubProcess create_model() called ==================================
2022-08-03 17:50:39,524:INFO:Initializing create_model()
2022-08-03 17:50:39,524:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226B1B26D00>, return_train_score=False, kwargs={'num_leaves': 30, 'max_depth': 80, 'learning_rate': 0.7000000000000001})
2022-08-03 17:50:39,524:INFO:Checking exceptions
2022-08-03 17:50:39,525:INFO:Importing libraries
2022-08-03 17:50:39,525:INFO:Copying training dataset
2022-08-03 17:50:39,526:INFO:Defining folds
2022-08-03 17:50:39,527:INFO:Declaring metric variables
2022-08-03 17:50:39,553:INFO:Importing untrained model
2022-08-03 17:50:39,554:INFO:Declaring custom model
2022-08-03 17:50:39,582:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-03 17:50:39,627:INFO:Starting cross validation
2022-08-03 17:50:39,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:50:40,187:INFO:Calculating mean and std
2022-08-03 17:50:40,190:INFO:Creating metrics dataframe
2022-08-03 17:50:40,220:INFO:Finalizing model
2022-08-03 17:50:40,498:INFO:Uploading results into container
2022-08-03 17:50:40,498:INFO:Uploading model into container now
2022-08-03 17:50:40,499:INFO:create_model_container: 23
2022-08-03 17:50:40,499:INFO:master_model_container: 23
2022-08-03 17:50:40,499:INFO:display_container: 5
2022-08-03 17:50:40,507:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-03 17:50:40,507:INFO:create_model() succesfully completed......................................
2022-08-03 17:50:40,660:INFO:SubProcess create_model() end ==================================
2022-08-03 17:50:40,660:INFO:Creating Dashboard logs
2022-08-03 17:50:40,688:INFO:Model: Light Gradient Boosting Machine
2022-08-03 17:50:40,747:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.7000000000000001, 'max_depth': 80, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 30, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-08-03 17:50:40,815:INFO:Initializing predict_model()
2022-08-03 17:50:40,816:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-03 17:50:40,816:INFO:Checking exceptions
2022-08-03 17:50:40,816:INFO:Preloading libraries
2022-08-03 17:50:41,629:INFO:create_model_container: 23
2022-08-03 17:50:41,629:INFO:master_model_container: 23
2022-08-03 17:50:41,630:INFO:display_container: 5
2022-08-03 17:50:41,634:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-03 17:50:41,635:INFO:tune_model() succesfully completed......................................
2022-08-03 17:50:41,843:INFO:Initializing plot_model()
2022-08-03 17:50:41,843:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals_interactive, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-03 17:50:41,844:INFO:Checking exceptions
2022-08-03 17:50:41,845:INFO:Preparing display monitor
2022-08-03 17:50:41,869:INFO:Preloading libraries
2022-08-03 17:50:41,872:INFO:Copying training dataset
2022-08-03 17:50:41,874:INFO:Copying test dataset
2022-08-03 17:50:41,875:INFO:Plot type: residuals_interactive
2022-08-03 17:50:41,935:INFO:Calculated model residuals
2022-08-03 17:50:48,170:INFO:Calculated Tunkey-Anscombe Plot
2022-08-03 17:50:49,615:INFO:Calculated Normal QQ Plot
2022-08-03 17:50:53,581:INFO:Calculated Scale-Location Plot
2022-08-03 17:50:54,387:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-08-03 17:50:54,553:INFO:Visual Rendered Successfully
2022-08-03 17:50:54,699:INFO:plot_model() succesfully completed......................................
2022-08-03 17:50:54,716:INFO:Initializing plot_model()
2022-08-03 17:50:54,716:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-03 17:50:54,716:INFO:Checking exceptions
2022-08-03 17:50:54,717:INFO:Preparing display monitor
2022-08-03 17:50:54,732:INFO:Preloading libraries
2022-08-03 17:50:54,737:INFO:Copying training dataset
2022-08-03 17:50:54,738:INFO:Copying test dataset
2022-08-03 17:50:54,738:INFO:Plot type: feature
2022-08-03 17:50:54,744:WARNING:No coef_ found. Trying feature_importances_
2022-08-03 17:50:55,150:INFO:Visual Rendered Successfully
2022-08-03 17:50:55,279:INFO:plot_model() succesfully completed......................................
2022-08-03 17:50:55,304:INFO:Initializing plot_model()
2022-08-03 17:50:55,305:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=error, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-03 17:50:55,305:INFO:Checking exceptions
2022-08-03 17:50:55,307:INFO:Preparing display monitor
2022-08-03 17:50:55,329:INFO:Preloading libraries
2022-08-03 17:50:55,334:INFO:Copying training dataset
2022-08-03 17:50:55,335:INFO:Copying test dataset
2022-08-03 17:50:55,335:INFO:Plot type: error
2022-08-03 17:50:55,498:INFO:Fitting Model
2022-08-03 17:50:55,503:INFO:Scoring test/hold-out set
2022-08-03 17:50:56,911:INFO:Visual Rendered Successfully
2022-08-03 17:50:57,052:INFO:plot_model() succesfully completed......................................
2022-08-03 17:50:57,069:INFO:Initializing evaluate_model()
2022-08-03 17:50:57,070:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-08-03 17:50:57,106:INFO:Initializing plot_model()
2022-08-03 17:50:57,106:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-08-03 17:50:57,107:INFO:Checking exceptions
2022-08-03 17:50:57,107:INFO:Preparing display monitor
2022-08-03 17:50:57,118:INFO:Preloading libraries
2022-08-03 17:50:57,122:INFO:Copying training dataset
2022-08-03 17:50:57,122:INFO:Copying test dataset
2022-08-03 17:50:57,123:INFO:Plot type: parameter
2022-08-03 17:50:57,138:INFO:Visual Rendered Successfully
2022-08-03 17:50:57,274:INFO:plot_model() succesfully completed......................................
2022-08-03 17:50:57,303:INFO:Initializing predict_model()
2022-08-03 17:50:57,303:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-08-03 17:50:57,303:INFO:Checking exceptions
2022-08-03 17:50:57,303:INFO:Preloading libraries
2022-08-03 17:50:57,304:INFO:Preparing display monitor
2022-08-03 17:50:58,067:INFO:Initializing finalize_model()
2022-08-03 17:50:58,067:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-08-03 17:50:58,068:INFO:Finalizing PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False)
2022-08-03 17:50:58,069:INFO:Initializing create_model()
2022-08-03 17:50:58,069:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226AF7CF700>,
                                task_type='CPU', verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-03 17:50:58,069:INFO:Checking exceptions
2022-08-03 17:50:58,070:INFO:Importing libraries
2022-08-03 17:50:58,070:INFO:Copying training dataset
2022-08-03 17:50:58,071:INFO:Defining folds
2022-08-03 17:50:58,071:INFO:Declaring metric variables
2022-08-03 17:50:58,071:INFO:Importing untrained model
2022-08-03 17:50:58,071:INFO:Declaring custom model
2022-08-03 17:50:58,072:INFO:CatBoost Regressor Imported succesfully
2022-08-03 17:50:58,073:INFO:Starting cross validation
2022-08-03 17:50:58,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-03 17:51:02,452:INFO:Calculating mean and std
2022-08-03 17:51:02,453:INFO:Creating metrics dataframe
2022-08-03 17:51:02,465:INFO:Finalizing model
2022-08-03 17:51:04,316:INFO:create_model_container: 23
2022-08-03 17:51:04,316:INFO:master_model_container: 23
2022-08-03 17:51:04,316:INFO:display_container: 7
2022-08-03 17:51:04,317:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                task_type='CPU', verbose=False)
2022-08-03 17:51:04,317:INFO:create_model() succesfully completed......................................
2022-08-03 17:51:04,452:INFO:Creating Dashboard logs
2022-08-03 17:51:04,452:INFO:Model: CatBoost Regressor
2022-08-03 17:51:04,538:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 180, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 30, 'random_strength': 0.20000000298023224, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 8, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.4000000059604645, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 256}
2022-08-03 17:51:04,655:INFO:Initializing predict_model()
2022-08-03 17:51:04,656:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-03 17:51:04,656:INFO:Checking exceptions
2022-08-03 17:51:04,656:INFO:Preloading libraries
2022-08-03 17:51:05,293:INFO:create_model_container: 23
2022-08-03 17:51:05,293:INFO:master_model_container: 23
2022-08-03 17:51:05,293:INFO:display_container: 6
2022-08-03 17:51:05,293:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                task_type='CPU', verbose=False)
2022-08-03 17:51:05,294:INFO:finalize_model() succesfully completed......................................
2022-08-03 17:51:05,447:INFO:Initializing save_model()
2022-08-03 17:51:05,447:INFO:save_model(model=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                task_type='CPU', verbose=False), model_name=diamond-pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-08-03 17:51:05,447:INFO:Adding model into prep_pipe
2022-08-03 17:51:05,479:INFO:diamond-pipeline.pkl saved in current working directory
2022-08-03 17:51:05,490:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ['trained_model',
                 PowerTransformedTargetRegressor(border_count=254, depth=8,
                                                 eta=0.4, l2_leaf_reg=30,
                                                 loss_function='RMSE',
                                                 n_estimators=180,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=123,
                                                 random_strength=0.2,
                                                 regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                                 task_type='CPU',
                                                 verbose=False)]],
         verbose=False)
2022-08-03 17:51:05,490:INFO:save_model() successfully completed......................................
2022-08-03 17:51:05,656:INFO:Initializing predict_model()
2022-08-03 17:51:05,657:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226B57B89D0>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-08-03 17:51:05,657:INFO:Checking exceptions
2022-08-03 17:51:05,657:INFO:Preloading libraries
2022-08-03 17:51:05,658:INFO:Preparing display monitor
2022-08-11 12:43:53,272:INFO:PyCaret Supervised Module
2022-08-11 12:43:53,602:INFO:ML Usecase: regression
2022-08-11 12:43:53,602:INFO:version 2.3.10
2022-08-11 12:43:53,602:INFO:Initializing setup()
2022-08-11 12:43:53,602:INFO:setup(target=Price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=['Carat Weight'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=diamond1, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-08-11 12:43:53,617:INFO:Checking environment
2022-08-11 12:43:53,618:INFO:python_version: 3.8.13
2022-08-11 12:43:53,618:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-08-11 12:43:53,618:INFO:machine: AMD64
2022-08-11 12:43:53,618:INFO:platform: Windows-10-10.0.19044-SP0
2022-08-11 12:43:53,620:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-08-11 12:43:53,621:INFO:Checking libraries
2022-08-11 12:43:53,621:INFO:pd==1.4.2
2022-08-11 12:43:53,621:INFO:numpy==1.19.5
2022-08-11 12:43:53,621:INFO:sklearn==0.23.2
2022-08-11 12:43:53,621:INFO:lightgbm==3.3.2
2022-08-11 12:43:53,952:INFO:catboost==1.0.5
2022-08-11 12:43:53,952:INFO:xgboost==1.6.1
2022-08-11 12:43:53,952:INFO:mlflow==1.25.1
2022-08-11 12:43:53,952:INFO:Checking Exceptions
2022-08-11 12:43:53,952:INFO:Declaring global variables
2022-08-11 12:43:53,952:INFO:USI: dd19
2022-08-11 12:43:53,952:INFO:pycaret_globals: {'fold_generator', 'y_test', 'y_train', '_ml_usecase', 'display_container', 'data_before_preprocess', 'X_train', 'master_model_container', 'fold_groups_param', 'stratify_param', 'transform_target_param', 'prep_pipe', '_gpu_n_jobs_param', 'fold_shuffle_param', 'fold_groups_param_full', 'seed', 'n_jobs_param', 'transform_target_method_param', 'iterative_imputation_iters_param', 'fix_imbalance_param', '_all_metrics', 'X', 'create_model_container', 'imputation_regressor', 'fold_param', 'gpu_param', 'exp_name_log', 'imputation_classifier', 'y', '_available_plots', 'experiment__', 'log_plots_param', 'fix_imbalance_method_param', 'target_param', 'USI', '_all_models', '_internal_pipeline', 'dashboard_logger', '_all_models_internal', 'X_test', 'logging_param', 'html_param', 'pycaret_globals'}
2022-08-11 12:43:53,952:INFO:Preparing display monitor
2022-08-11 12:43:53,953:INFO:Preparing display monitor
2022-08-11 12:43:53,966:INFO:Importing libraries
2022-08-11 12:43:53,967:INFO:Copying data for preprocessing
2022-08-11 12:43:53,979:INFO:Declaring preprocessing parameters
2022-08-11 12:43:53,981:INFO:Creating preprocessing pipeline
2022-08-11 12:43:53,993:INFO:Preprocessing pipeline created successfully
2022-08-11 12:43:53,993:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-08-11 12:43:53,994:INFO:Creating global containers
2022-08-11 12:43:53,997:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-08-11 12:43:55,729:INFO:Creating grid variables
2022-08-11 12:43:55,753:INFO:Logging experiment in MLFlow
2022-08-11 12:43:56,242:INFO:SubProcess save_model() called ==================================
2022-08-11 12:43:56,259:INFO:Initializing save_model()
2022-08-11 12:43:56,259:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-08-11 12:43:56,259:INFO:Adding model into prep_pipe
2022-08-11 12:43:56,260:WARNING:Only Model saved as it was a pipeline.
2022-08-11 12:43:56,274:INFO:Transformation Pipeline.pkl saved in current working directory
2022-08-11 12:43:56,282:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-08-11 12:43:56,282:INFO:save_model() successfully completed......................................
2022-08-11 12:43:56,410:INFO:SubProcess save_model() end ==================================
2022-08-11 12:43:56,516:INFO:create_model_container: 0
2022-08-11 12:43:56,516:INFO:master_model_container: 0
2022-08-11 12:43:56,516:INFO:display_container: 1
2022-08-11 12:43:56,525:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-08-11 12:43:56,526:INFO:setup() succesfully completed......................................
2022-08-11 12:43:56,641:INFO:Initializing compare_models()
2022-08-11 12:43:56,641:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=['ransac'])
2022-08-11 12:43:56,641:INFO:Checking exceptions
2022-08-11 12:43:56,642:INFO:Preparing display monitor
2022-08-11 12:43:56,642:INFO:Preparing display monitor
2022-08-11 12:43:56,688:INFO:Initializing Linear Regression
2022-08-11 12:43:56,689:INFO:Total runtime is 1.6645590464274088e-05 minutes
2022-08-11 12:43:56,702:INFO:SubProcess create_model() called ==================================
2022-08-11 12:43:56,703:INFO:Initializing create_model()
2022-08-11 12:43:56,703:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:43:56,703:INFO:Checking exceptions
2022-08-11 12:43:56,704:INFO:Importing libraries
2022-08-11 12:43:56,704:INFO:Copying training dataset
2022-08-11 12:43:56,706:INFO:Defining folds
2022-08-11 12:43:56,706:INFO:Declaring metric variables
2022-08-11 12:43:56,717:INFO:Importing untrained model
2022-08-11 12:43:56,730:INFO:Linear Regression Imported succesfully
2022-08-11 12:43:56,757:INFO:Starting cross validation
2022-08-11 12:43:56,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:00,681:INFO:Calculating mean and std
2022-08-11 12:44:00,683:INFO:Creating metrics dataframe
2022-08-11 12:44:00,742:INFO:Uploading results into container
2022-08-11 12:44:00,742:INFO:Uploading model into container now
2022-08-11 12:44:00,742:INFO:create_model_container: 1
2022-08-11 12:44:00,743:INFO:master_model_container: 1
2022-08-11 12:44:00,743:INFO:display_container: 2
2022-08-11 12:44:00,743:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2022-08-11 12:44:00,743:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:00,853:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:00,853:INFO:Creating metrics dataframe
2022-08-11 12:44:00,881:INFO:Initializing Lasso Regression
2022-08-11 12:44:00,881:INFO:Total runtime is 0.06989220778147379 minutes
2022-08-11 12:44:00,894:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:00,895:INFO:Initializing create_model()
2022-08-11 12:44:00,895:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:00,895:INFO:Checking exceptions
2022-08-11 12:44:00,896:INFO:Importing libraries
2022-08-11 12:44:00,896:INFO:Copying training dataset
2022-08-11 12:44:00,897:INFO:Defining folds
2022-08-11 12:44:00,897:INFO:Declaring metric variables
2022-08-11 12:44:00,910:INFO:Importing untrained model
2022-08-11 12:44:00,925:INFO:Lasso Regression Imported succesfully
2022-08-11 12:44:00,945:INFO:Starting cross validation
2022-08-11 12:44:00,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:01,038:INFO:Calculating mean and std
2022-08-11 12:44:01,039:INFO:Creating metrics dataframe
2022-08-11 12:44:01,069:INFO:Uploading results into container
2022-08-11 12:44:01,069:INFO:Uploading model into container now
2022-08-11 12:44:01,069:INFO:create_model_container: 2
2022-08-11 12:44:01,070:INFO:master_model_container: 2
2022-08-11 12:44:01,070:INFO:display_container: 2
2022-08-11 12:44:01,072:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-08-11 12:44:01,072:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:01,177:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:01,178:INFO:Creating metrics dataframe
2022-08-11 12:44:01,210:INFO:Initializing Ridge Regression
2022-08-11 12:44:01,210:INFO:Total runtime is 0.07537669340769448 minutes
2022-08-11 12:44:01,221:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:01,221:INFO:Initializing create_model()
2022-08-11 12:44:01,222:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:01,222:INFO:Checking exceptions
2022-08-11 12:44:01,222:INFO:Importing libraries
2022-08-11 12:44:01,222:INFO:Copying training dataset
2022-08-11 12:44:01,223:INFO:Defining folds
2022-08-11 12:44:01,224:INFO:Declaring metric variables
2022-08-11 12:44:01,242:INFO:Importing untrained model
2022-08-11 12:44:01,268:INFO:Ridge Regression Imported succesfully
2022-08-11 12:44:01,293:INFO:Starting cross validation
2022-08-11 12:44:01,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:01,405:INFO:Calculating mean and std
2022-08-11 12:44:01,406:INFO:Creating metrics dataframe
2022-08-11 12:44:01,431:INFO:Uploading results into container
2022-08-11 12:44:01,431:INFO:Uploading model into container now
2022-08-11 12:44:01,431:INFO:create_model_container: 3
2022-08-11 12:44:01,432:INFO:master_model_container: 3
2022-08-11 12:44:01,432:INFO:display_container: 2
2022-08-11 12:44:01,433:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2022-08-11 12:44:01,434:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:01,539:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:01,540:INFO:Creating metrics dataframe
2022-08-11 12:44:01,572:INFO:Initializing Elastic Net
2022-08-11 12:44:01,572:INFO:Total runtime is 0.08139624993006386 minutes
2022-08-11 12:44:01,585:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:01,586:INFO:Initializing create_model()
2022-08-11 12:44:01,586:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:01,586:INFO:Checking exceptions
2022-08-11 12:44:01,586:INFO:Importing libraries
2022-08-11 12:44:01,586:INFO:Copying training dataset
2022-08-11 12:44:01,587:INFO:Defining folds
2022-08-11 12:44:01,588:INFO:Declaring metric variables
2022-08-11 12:44:01,598:INFO:Importing untrained model
2022-08-11 12:44:01,612:INFO:Elastic Net Imported succesfully
2022-08-11 12:44:01,633:INFO:Starting cross validation
2022-08-11 12:44:01,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:01,739:INFO:Calculating mean and std
2022-08-11 12:44:01,741:INFO:Creating metrics dataframe
2022-08-11 12:44:01,787:INFO:Uploading results into container
2022-08-11 12:44:01,788:INFO:Uploading model into container now
2022-08-11 12:44:01,788:INFO:create_model_container: 4
2022-08-11 12:44:01,788:INFO:master_model_container: 4
2022-08-11 12:44:01,788:INFO:display_container: 2
2022-08-11 12:44:01,790:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-08-11 12:44:01,791:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:01,904:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:01,904:INFO:Creating metrics dataframe
2022-08-11 12:44:01,935:INFO:Initializing Least Angle Regression
2022-08-11 12:44:01,935:INFO:Total runtime is 0.08745116392771402 minutes
2022-08-11 12:44:01,950:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:01,950:INFO:Initializing create_model()
2022-08-11 12:44:01,950:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:01,951:INFO:Checking exceptions
2022-08-11 12:44:01,951:INFO:Importing libraries
2022-08-11 12:44:01,951:INFO:Copying training dataset
2022-08-11 12:44:01,952:INFO:Defining folds
2022-08-11 12:44:01,952:INFO:Declaring metric variables
2022-08-11 12:44:01,962:INFO:Importing untrained model
2022-08-11 12:44:01,975:INFO:Least Angle Regression Imported succesfully
2022-08-11 12:44:01,996:INFO:Starting cross validation
2022-08-11 12:44:01,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:02,907:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-08-11 12:44:02,912:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-08-11 12:44:02,913:INFO:Initializing create_model()
2022-08-11 12:44:02,913:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:02,913:INFO:Checking exceptions
2022-08-11 12:44:02,913:INFO:Importing libraries
2022-08-11 12:44:02,913:INFO:Copying training dataset
2022-08-11 12:44:02,914:INFO:Defining folds
2022-08-11 12:44:02,914:INFO:Declaring metric variables
2022-08-11 12:44:02,926:INFO:Importing untrained model
2022-08-11 12:44:02,939:INFO:Least Angle Regression Imported succesfully
2022-08-11 12:44:02,962:INFO:Starting cross validation
2022-08-11 12:44:02,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:15,556:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-08-11 12:44:15,556:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-08-11 12:44:15,556:INFO:Initializing Lasso Least Angle Regression
2022-08-11 12:44:15,556:INFO:Total runtime is 0.31447605292002356 minutes
2022-08-11 12:44:15,570:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:15,571:INFO:Initializing create_model()
2022-08-11 12:44:15,571:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:15,571:INFO:Checking exceptions
2022-08-11 12:44:15,571:INFO:Importing libraries
2022-08-11 12:44:15,571:INFO:Copying training dataset
2022-08-11 12:44:15,572:INFO:Defining folds
2022-08-11 12:44:15,573:INFO:Declaring metric variables
2022-08-11 12:44:15,583:INFO:Importing untrained model
2022-08-11 12:44:15,597:INFO:Lasso Least Angle Regression Imported succesfully
2022-08-11 12:44:15,636:INFO:Starting cross validation
2022-08-11 12:44:15,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:30,532:INFO:Calculating mean and std
2022-08-11 12:44:30,534:INFO:Creating metrics dataframe
2022-08-11 12:44:30,591:INFO:Uploading results into container
2022-08-11 12:44:30,591:INFO:Uploading model into container now
2022-08-11 12:44:30,591:INFO:create_model_container: 5
2022-08-11 12:44:30,591:INFO:master_model_container: 5
2022-08-11 12:44:30,591:INFO:display_container: 2
2022-08-11 12:44:30,591:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2022-08-11 12:44:30,591:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:30,768:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:30,768:INFO:Creating metrics dataframe
2022-08-11 12:44:30,830:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 12:44:30,830:INFO:Total runtime is 0.569043473402659 minutes
2022-08-11 12:44:30,854:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:30,855:INFO:Initializing create_model()
2022-08-11 12:44:30,856:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:30,856:INFO:Checking exceptions
2022-08-11 12:44:30,856:INFO:Importing libraries
2022-08-11 12:44:30,856:INFO:Copying training dataset
2022-08-11 12:44:30,858:INFO:Defining folds
2022-08-11 12:44:30,859:INFO:Declaring metric variables
2022-08-11 12:44:30,874:INFO:Importing untrained model
2022-08-11 12:44:30,891:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-08-11 12:44:30,930:INFO:Starting cross validation
2022-08-11 12:44:30,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:31,086:INFO:Calculating mean and std
2022-08-11 12:44:31,086:INFO:Creating metrics dataframe
2022-08-11 12:44:31,125:INFO:Uploading results into container
2022-08-11 12:44:31,125:INFO:Uploading model into container now
2022-08-11 12:44:31,125:INFO:create_model_container: 6
2022-08-11 12:44:31,125:INFO:master_model_container: 6
2022-08-11 12:44:31,126:INFO:display_container: 2
2022-08-11 12:44:31,128:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2022-08-11 12:44:31,128:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:31,254:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:31,254:INFO:Creating metrics dataframe
2022-08-11 12:44:31,308:INFO:Initializing Bayesian Ridge
2022-08-11 12:44:31,308:INFO:Total runtime is 0.5770097891489664 minutes
2022-08-11 12:44:31,326:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:31,326:INFO:Initializing create_model()
2022-08-11 12:44:31,326:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:31,326:INFO:Checking exceptions
2022-08-11 12:44:31,326:INFO:Importing libraries
2022-08-11 12:44:31,326:INFO:Copying training dataset
2022-08-11 12:44:31,326:INFO:Defining folds
2022-08-11 12:44:31,326:INFO:Declaring metric variables
2022-08-11 12:44:31,358:INFO:Importing untrained model
2022-08-11 12:44:31,396:INFO:Bayesian Ridge Imported succesfully
2022-08-11 12:44:31,455:INFO:Starting cross validation
2022-08-11 12:44:31,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:31,714:INFO:Calculating mean and std
2022-08-11 12:44:31,714:INFO:Creating metrics dataframe
2022-08-11 12:44:31,808:INFO:Uploading results into container
2022-08-11 12:44:31,808:INFO:Uploading model into container now
2022-08-11 12:44:31,808:INFO:create_model_container: 7
2022-08-11 12:44:31,808:INFO:master_model_container: 7
2022-08-11 12:44:31,808:INFO:display_container: 2
2022-08-11 12:44:31,825:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2022-08-11 12:44:31,826:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:32,149:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:32,150:INFO:Creating metrics dataframe
2022-08-11 12:44:32,247:INFO:Initializing Passive Aggressive Regressor
2022-08-11 12:44:32,248:INFO:Total runtime is 0.5926703294118245 minutes
2022-08-11 12:44:32,273:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:32,275:INFO:Initializing create_model()
2022-08-11 12:44:32,276:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:32,277:INFO:Checking exceptions
2022-08-11 12:44:32,277:INFO:Importing libraries
2022-08-11 12:44:32,277:INFO:Copying training dataset
2022-08-11 12:44:32,280:INFO:Defining folds
2022-08-11 12:44:32,281:INFO:Declaring metric variables
2022-08-11 12:44:32,320:INFO:Importing untrained model
2022-08-11 12:44:32,352:INFO:Passive Aggressive Regressor Imported succesfully
2022-08-11 12:44:32,410:INFO:Starting cross validation
2022-08-11 12:44:32,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:32,676:INFO:Calculating mean and std
2022-08-11 12:44:32,680:INFO:Creating metrics dataframe
2022-08-11 12:44:32,796:INFO:Uploading results into container
2022-08-11 12:44:32,797:INFO:Uploading model into container now
2022-08-11 12:44:32,797:INFO:create_model_container: 8
2022-08-11 12:44:32,798:INFO:master_model_container: 8
2022-08-11 12:44:32,799:INFO:display_container: 2
2022-08-11 12:44:32,806:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-08-11 12:44:32,807:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:33,020:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:33,020:INFO:Creating metrics dataframe
2022-08-11 12:44:33,114:INFO:Initializing Huber Regressor
2022-08-11 12:44:33,114:INFO:Total runtime is 0.6071016311645507 minutes
2022-08-11 12:44:33,142:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:33,143:INFO:Initializing create_model()
2022-08-11 12:44:33,143:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:33,144:INFO:Checking exceptions
2022-08-11 12:44:33,144:INFO:Importing libraries
2022-08-11 12:44:33,145:INFO:Copying training dataset
2022-08-11 12:44:33,148:INFO:Defining folds
2022-08-11 12:44:33,149:INFO:Declaring metric variables
2022-08-11 12:44:33,172:INFO:Importing untrained model
2022-08-11 12:44:33,224:INFO:Huber Regressor Imported succesfully
2022-08-11 12:44:33,288:INFO:Starting cross validation
2022-08-11 12:44:33,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:34,790:INFO:Calculating mean and std
2022-08-11 12:44:34,792:INFO:Creating metrics dataframe
2022-08-11 12:44:34,841:INFO:Uploading results into container
2022-08-11 12:44:34,841:INFO:Uploading model into container now
2022-08-11 12:44:34,841:INFO:create_model_container: 9
2022-08-11 12:44:34,841:INFO:master_model_container: 9
2022-08-11 12:44:34,841:INFO:display_container: 2
2022-08-11 12:44:34,841:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2022-08-11 12:44:34,849:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:34,986:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:34,986:INFO:Creating metrics dataframe
2022-08-11 12:44:35,048:INFO:Initializing K Neighbors Regressor
2022-08-11 12:44:35,048:INFO:Total runtime is 0.6393446922302246 minutes
2022-08-11 12:44:35,067:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:35,067:INFO:Initializing create_model()
2022-08-11 12:44:35,067:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:35,068:INFO:Checking exceptions
2022-08-11 12:44:35,068:INFO:Importing libraries
2022-08-11 12:44:35,068:INFO:Copying training dataset
2022-08-11 12:44:35,070:INFO:Defining folds
2022-08-11 12:44:35,071:INFO:Declaring metric variables
2022-08-11 12:44:35,088:INFO:Importing untrained model
2022-08-11 12:44:35,110:INFO:K Neighbors Regressor Imported succesfully
2022-08-11 12:44:35,152:INFO:Starting cross validation
2022-08-11 12:44:35,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:35,914:INFO:Calculating mean and std
2022-08-11 12:44:35,914:INFO:Creating metrics dataframe
2022-08-11 12:44:35,973:INFO:Uploading results into container
2022-08-11 12:44:35,973:INFO:Uploading model into container now
2022-08-11 12:44:35,973:INFO:create_model_container: 10
2022-08-11 12:44:35,973:INFO:master_model_container: 10
2022-08-11 12:44:35,973:INFO:display_container: 2
2022-08-11 12:44:35,973:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2022-08-11 12:44:35,973:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:36,104:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:36,104:INFO:Creating metrics dataframe
2022-08-11 12:44:36,166:INFO:Initializing Decision Tree Regressor
2022-08-11 12:44:36,166:INFO:Total runtime is 0.6579749584197998 minutes
2022-08-11 12:44:36,186:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:36,187:INFO:Initializing create_model()
2022-08-11 12:44:36,188:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:36,188:INFO:Checking exceptions
2022-08-11 12:44:36,188:INFO:Importing libraries
2022-08-11 12:44:36,188:INFO:Copying training dataset
2022-08-11 12:44:36,191:INFO:Defining folds
2022-08-11 12:44:36,191:INFO:Declaring metric variables
2022-08-11 12:44:36,221:INFO:Importing untrained model
2022-08-11 12:44:36,260:INFO:Decision Tree Regressor Imported succesfully
2022-08-11 12:44:36,355:INFO:Starting cross validation
2022-08-11 12:44:36,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:36,562:INFO:Calculating mean and std
2022-08-11 12:44:36,562:INFO:Creating metrics dataframe
2022-08-11 12:44:36,619:INFO:Uploading results into container
2022-08-11 12:44:36,620:INFO:Uploading model into container now
2022-08-11 12:44:36,620:INFO:create_model_container: 11
2022-08-11 12:44:36,620:INFO:master_model_container: 11
2022-08-11 12:44:36,620:INFO:display_container: 2
2022-08-11 12:44:36,623:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2022-08-11 12:44:36,623:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:36,752:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:36,752:INFO:Creating metrics dataframe
2022-08-11 12:44:36,799:INFO:Initializing Random Forest Regressor
2022-08-11 12:44:36,799:INFO:Total runtime is 0.6685216824213663 minutes
2022-08-11 12:44:36,833:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:36,834:INFO:Initializing create_model()
2022-08-11 12:44:36,834:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:36,834:INFO:Checking exceptions
2022-08-11 12:44:36,835:INFO:Importing libraries
2022-08-11 12:44:36,835:INFO:Copying training dataset
2022-08-11 12:44:36,837:INFO:Defining folds
2022-08-11 12:44:36,838:INFO:Declaring metric variables
2022-08-11 12:44:36,866:INFO:Importing untrained model
2022-08-11 12:44:36,895:INFO:Random Forest Regressor Imported succesfully
2022-08-11 12:44:36,955:INFO:Starting cross validation
2022-08-11 12:44:36,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:41,781:INFO:Calculating mean and std
2022-08-11 12:44:41,784:INFO:Creating metrics dataframe
2022-08-11 12:44:41,920:INFO:Uploading results into container
2022-08-11 12:44:41,927:INFO:Uploading model into container now
2022-08-11 12:44:41,927:INFO:create_model_container: 12
2022-08-11 12:44:41,927:INFO:master_model_container: 12
2022-08-11 12:44:41,927:INFO:display_container: 2
2022-08-11 12:44:41,936:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2022-08-11 12:44:41,937:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:42,224:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:42,224:INFO:Creating metrics dataframe
2022-08-11 12:44:42,317:INFO:Initializing Extra Trees Regressor
2022-08-11 12:44:42,317:INFO:Total runtime is 0.7604940493901571 minutes
2022-08-11 12:44:42,356:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:42,357:INFO:Initializing create_model()
2022-08-11 12:44:42,357:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:42,358:INFO:Checking exceptions
2022-08-11 12:44:42,358:INFO:Importing libraries
2022-08-11 12:44:42,359:INFO:Copying training dataset
2022-08-11 12:44:42,361:INFO:Defining folds
2022-08-11 12:44:42,361:INFO:Declaring metric variables
2022-08-11 12:44:42,383:INFO:Importing untrained model
2022-08-11 12:44:42,414:INFO:Extra Trees Regressor Imported succesfully
2022-08-11 12:44:42,467:INFO:Starting cross validation
2022-08-11 12:44:42,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:47,670:INFO:Calculating mean and std
2022-08-11 12:44:47,670:INFO:Creating metrics dataframe
2022-08-11 12:44:47,728:INFO:Uploading results into container
2022-08-11 12:44:47,728:INFO:Uploading model into container now
2022-08-11 12:44:47,729:INFO:create_model_container: 13
2022-08-11 12:44:47,729:INFO:master_model_container: 13
2022-08-11 12:44:47,729:INFO:display_container: 2
2022-08-11 12:44:47,733:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2022-08-11 12:44:47,733:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:47,867:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:47,867:INFO:Creating metrics dataframe
2022-08-11 12:44:47,929:INFO:Initializing AdaBoost Regressor
2022-08-11 12:44:47,929:INFO:Total runtime is 0.854023555914561 minutes
2022-08-11 12:44:47,952:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:47,954:INFO:Initializing create_model()
2022-08-11 12:44:47,954:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:47,954:INFO:Checking exceptions
2022-08-11 12:44:47,954:INFO:Importing libraries
2022-08-11 12:44:47,955:INFO:Copying training dataset
2022-08-11 12:44:47,957:INFO:Defining folds
2022-08-11 12:44:47,959:INFO:Declaring metric variables
2022-08-11 12:44:47,982:INFO:Importing untrained model
2022-08-11 12:44:48,001:INFO:AdaBoost Regressor Imported succesfully
2022-08-11 12:44:48,037:INFO:Starting cross validation
2022-08-11 12:44:48,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:49,418:INFO:Calculating mean and std
2022-08-11 12:44:49,418:INFO:Creating metrics dataframe
2022-08-11 12:44:49,469:INFO:Uploading results into container
2022-08-11 12:44:49,469:INFO:Uploading model into container now
2022-08-11 12:44:49,469:INFO:create_model_container: 14
2022-08-11 12:44:49,469:INFO:master_model_container: 14
2022-08-11 12:44:49,469:INFO:display_container: 2
2022-08-11 12:44:49,469:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2022-08-11 12:44:49,469:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:49,601:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:49,601:INFO:Creating metrics dataframe
2022-08-11 12:44:49,672:INFO:Initializing Gradient Boosting Regressor
2022-08-11 12:44:49,673:INFO:Total runtime is 0.883084273338318 minutes
2022-08-11 12:44:49,697:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:49,698:INFO:Initializing create_model()
2022-08-11 12:44:49,698:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:49,698:INFO:Checking exceptions
2022-08-11 12:44:49,699:INFO:Importing libraries
2022-08-11 12:44:49,699:INFO:Copying training dataset
2022-08-11 12:44:49,700:INFO:Defining folds
2022-08-11 12:44:49,701:INFO:Declaring metric variables
2022-08-11 12:44:49,728:INFO:Importing untrained model
2022-08-11 12:44:49,754:INFO:Gradient Boosting Regressor Imported succesfully
2022-08-11 12:44:49,807:INFO:Starting cross validation
2022-08-11 12:44:49,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:51,715:INFO:Calculating mean and std
2022-08-11 12:44:51,715:INFO:Creating metrics dataframe
2022-08-11 12:44:51,782:INFO:Uploading results into container
2022-08-11 12:44:51,782:INFO:Uploading model into container now
2022-08-11 12:44:51,783:INFO:create_model_container: 15
2022-08-11 12:44:51,783:INFO:master_model_container: 15
2022-08-11 12:44:51,783:INFO:display_container: 2
2022-08-11 12:44:51,790:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-08-11 12:44:51,790:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:51,962:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:51,962:INFO:Creating metrics dataframe
2022-08-11 12:44:52,040:INFO:Initializing Extreme Gradient Boosting
2022-08-11 12:44:52,040:INFO:Total runtime is 0.9225394487380982 minutes
2022-08-11 12:44:52,087:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:52,088:INFO:Initializing create_model()
2022-08-11 12:44:52,088:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:52,089:INFO:Checking exceptions
2022-08-11 12:44:52,089:INFO:Importing libraries
2022-08-11 12:44:52,090:INFO:Copying training dataset
2022-08-11 12:44:52,092:INFO:Defining folds
2022-08-11 12:44:52,093:INFO:Declaring metric variables
2022-08-11 12:44:52,119:INFO:Importing untrained model
2022-08-11 12:44:52,146:INFO:Extreme Gradient Boosting Imported succesfully
2022-08-11 12:44:52,195:INFO:Starting cross validation
2022-08-11 12:44:52,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:56,726:INFO:Calculating mean and std
2022-08-11 12:44:56,728:INFO:Creating metrics dataframe
2022-08-11 12:44:56,779:INFO:Uploading results into container
2022-08-11 12:44:56,780:INFO:Uploading model into container now
2022-08-11 12:44:56,780:INFO:create_model_container: 16
2022-08-11 12:44:56,780:INFO:master_model_container: 16
2022-08-11 12:44:56,780:INFO:display_container: 2
2022-08-11 12:44:56,783:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                callbacks=None, colsample_bylevel=None,
                                colsample_bynode=None, colsample_bytree=None,
                                early_stopping_rounds=None,
                                enable_categorical=False, eval_metric=None,
                                gamma=None, gpu_id=None, grow_policy=None,
                                importance_type=None,
                                interaction_constraints=None,
                                learning_rate=None, max_bin=None,
                                max_cat_to_onehot=None, max_delta_step=None,
                                max_depth=None, max_leaves=None,
                                min_child_weight=None, missing=nan,
                                monotone_constraints=None, n_estimators=100,
                                n_jobs=-1, num_parallel_tree=None,
                                objective='reg:squarederror',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                predictor=None, ...)
2022-08-11 12:44:56,783:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:56,926:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:56,927:INFO:Creating metrics dataframe
2022-08-11 12:44:56,996:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 12:44:56,996:INFO:Total runtime is 1.005139982700348 minutes
2022-08-11 12:44:57,016:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:57,017:INFO:Initializing create_model()
2022-08-11 12:44:57,018:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:57,018:INFO:Checking exceptions
2022-08-11 12:44:57,018:INFO:Importing libraries
2022-08-11 12:44:57,018:INFO:Copying training dataset
2022-08-11 12:44:57,020:INFO:Defining folds
2022-08-11 12:44:57,021:INFO:Declaring metric variables
2022-08-11 12:44:57,049:INFO:Importing untrained model
2022-08-11 12:44:57,076:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-11 12:44:57,126:INFO:Starting cross validation
2022-08-11 12:44:57,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:44:57,925:INFO:Calculating mean and std
2022-08-11 12:44:57,926:INFO:Creating metrics dataframe
2022-08-11 12:44:57,965:INFO:Uploading results into container
2022-08-11 12:44:57,965:INFO:Uploading model into container now
2022-08-11 12:44:57,965:INFO:create_model_container: 17
2022-08-11 12:44:57,966:INFO:master_model_container: 17
2022-08-11 12:44:57,966:INFO:display_container: 2
2022-08-11 12:44:57,972:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-11 12:44:57,972:INFO:create_model() succesfully completed......................................
2022-08-11 12:44:58,119:INFO:SubProcess create_model() end ==================================
2022-08-11 12:44:58,119:INFO:Creating metrics dataframe
2022-08-11 12:44:58,172:INFO:Initializing CatBoost Regressor
2022-08-11 12:44:58,173:INFO:Total runtime is 1.024756685892741 minutes
2022-08-11 12:44:58,189:INFO:SubProcess create_model() called ==================================
2022-08-11 12:44:58,189:INFO:Initializing create_model()
2022-08-11 12:44:58,190:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:44:58,190:INFO:Checking exceptions
2022-08-11 12:44:58,190:INFO:Importing libraries
2022-08-11 12:44:58,190:INFO:Copying training dataset
2022-08-11 12:44:58,191:INFO:Defining folds
2022-08-11 12:44:58,192:INFO:Declaring metric variables
2022-08-11 12:44:58,211:INFO:Importing untrained model
2022-08-11 12:44:58,231:INFO:CatBoost Regressor Imported succesfully
2022-08-11 12:44:58,268:INFO:Starting cross validation
2022-08-11 12:44:58,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:45:09,568:INFO:Calculating mean and std
2022-08-11 12:45:09,570:INFO:Creating metrics dataframe
2022-08-11 12:45:09,617:INFO:Uploading results into container
2022-08-11 12:45:09,617:INFO:Uploading model into container now
2022-08-11 12:45:09,617:INFO:create_model_container: 18
2022-08-11 12:45:09,617:INFO:master_model_container: 18
2022-08-11 12:45:09,618:INFO:display_container: 2
2022-08-11 12:45:09,618:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226C798AC40>,
                                task_type='CPU', verbose=False)
2022-08-11 12:45:09,619:INFO:create_model() succesfully completed......................................
2022-08-11 12:45:09,759:INFO:SubProcess create_model() end ==================================
2022-08-11 12:45:09,759:INFO:Creating metrics dataframe
2022-08-11 12:45:09,816:INFO:Initializing Dummy Regressor
2022-08-11 12:45:09,816:INFO:Total runtime is 1.2188067634900412 minutes
2022-08-11 12:45:09,838:INFO:SubProcess create_model() called ==================================
2022-08-11 12:45:09,839:INFO:Initializing create_model()
2022-08-11 12:45:09,840:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CCEB8BE0>, return_train_score=False, kwargs={})
2022-08-11 12:45:09,840:INFO:Checking exceptions
2022-08-11 12:45:09,841:INFO:Importing libraries
2022-08-11 12:45:09,841:INFO:Copying training dataset
2022-08-11 12:45:09,843:INFO:Defining folds
2022-08-11 12:45:09,843:INFO:Declaring metric variables
2022-08-11 12:45:09,867:INFO:Importing untrained model
2022-08-11 12:45:09,886:INFO:Dummy Regressor Imported succesfully
2022-08-11 12:45:09,913:INFO:Starting cross validation
2022-08-11 12:45:09,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:45:10,079:INFO:Calculating mean and std
2022-08-11 12:45:10,080:INFO:Creating metrics dataframe
2022-08-11 12:45:10,117:INFO:Uploading results into container
2022-08-11 12:45:10,117:INFO:Uploading model into container now
2022-08-11 12:45:10,117:INFO:create_model_container: 19
2022-08-11 12:45:10,117:INFO:master_model_container: 19
2022-08-11 12:45:10,117:INFO:display_container: 2
2022-08-11 12:45:10,118:INFO:PowerTransformedTargetRegressor(constant=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                quantile=None,
                                regressor=DummyRegressor(constant=None,
                                                         quantile=None,
                                                         strategy='mean'),
                                strategy='mean')
2022-08-11 12:45:10,118:INFO:create_model() succesfully completed......................................
2022-08-11 12:45:10,234:INFO:SubProcess create_model() end ==================================
2022-08-11 12:45:10,234:INFO:Creating metrics dataframe
2022-08-11 12:45:10,325:INFO:Initializing create_model()
2022-08-11 12:45:10,326:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226C798AC40>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-11 12:45:10,326:INFO:Checking exceptions
2022-08-11 12:45:10,326:INFO:Importing libraries
2022-08-11 12:45:10,327:INFO:Copying training dataset
2022-08-11 12:45:10,328:INFO:Defining folds
2022-08-11 12:45:10,328:INFO:Declaring metric variables
2022-08-11 12:45:10,329:INFO:Importing untrained model
2022-08-11 12:45:10,329:INFO:Declaring custom model
2022-08-11 12:45:10,330:INFO:CatBoost Regressor Imported succesfully
2022-08-11 12:45:10,332:INFO:Cross validation set to False
2022-08-11 12:45:10,332:INFO:Fitting Model
2022-08-11 12:45:14,548:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CBC97B50>,
                                task_type='CPU', verbose=False)
2022-08-11 12:45:14,548:INFO:create_models() succesfully completed......................................
2022-08-11 12:45:14,666:INFO:Creating Dashboard logs
2022-08-11 12:45:14,676:INFO:Model: CatBoost Regressor
2022-08-11 12:45:14,746:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.050512999296188354, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2022-08-11 12:45:14,828:INFO:Initializing predict_model()
2022-08-11 12:45:14,829:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CBC97B50>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-11 12:45:14,829:INFO:Checking exceptions
2022-08-11 12:45:14,829:INFO:Preloading libraries
2022-08-11 12:45:15,353:INFO:Creating Dashboard logs
2022-08-11 12:45:15,365:INFO:Model: Extreme Gradient Boosting
2022-08-11 12:45:15,424:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:15,424:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:15,424:INFO:logged params: {}
2022-08-11 12:45:15,709:INFO:Creating Dashboard logs
2022-08-11 12:45:15,724:INFO:Model: Light Gradient Boosting Machine
2022-08-11 12:45:15,805:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:15,806:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:15,806:INFO:logged params: {}
2022-08-11 12:45:16,079:INFO:Creating Dashboard logs
2022-08-11 12:45:16,095:INFO:Model: Random Forest Regressor
2022-08-11 12:45:16,178:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:16,178:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:16,178:INFO:logged params: {}
2022-08-11 12:45:16,481:INFO:Creating Dashboard logs
2022-08-11 12:45:16,496:INFO:Model: Huber Regressor
2022-08-11 12:45:16,568:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:16,568:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:16,568:INFO:logged params: {}
2022-08-11 12:45:16,898:INFO:Creating Dashboard logs
2022-08-11 12:45:16,915:INFO:Model: Ridge Regression
2022-08-11 12:45:16,990:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:16,991:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:16,991:INFO:logged params: {}
2022-08-11 12:45:17,260:INFO:Creating Dashboard logs
2022-08-11 12:45:17,270:INFO:Model: Bayesian Ridge
2022-08-11 12:45:17,325:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:17,325:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:17,325:INFO:logged params: {}
2022-08-11 12:45:17,551:INFO:Creating Dashboard logs
2022-08-11 12:45:17,559:INFO:Model: Linear Regression
2022-08-11 12:45:17,636:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:17,640:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:17,640:INFO:logged params: {}
2022-08-11 12:45:17,939:INFO:Creating Dashboard logs
2022-08-11 12:45:17,954:INFO:Model: Extra Trees Regressor
2022-08-11 12:45:18,030:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:18,030:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:18,031:INFO:logged params: {}
2022-08-11 12:45:18,276:INFO:Creating Dashboard logs
2022-08-11 12:45:18,284:INFO:Model: Decision Tree Regressor
2022-08-11 12:45:18,339:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:18,340:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:18,340:INFO:logged params: {}
2022-08-11 12:45:18,625:INFO:Creating Dashboard logs
2022-08-11 12:45:18,637:INFO:Model: Gradient Boosting Regressor
2022-08-11 12:45:18,710:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:18,710:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:18,710:INFO:logged params: {}
2022-08-11 12:45:18,985:INFO:Creating Dashboard logs
2022-08-11 12:45:18,998:INFO:Model: Passive Aggressive Regressor
2022-08-11 12:45:19,081:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:19,081:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:19,082:INFO:logged params: {}
2022-08-11 12:45:19,345:INFO:Creating Dashboard logs
2022-08-11 12:45:19,358:INFO:Model: K Neighbors Regressor
2022-08-11 12:45:19,442:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:19,442:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:19,443:INFO:logged params: {}
2022-08-11 12:45:19,749:INFO:Creating Dashboard logs
2022-08-11 12:45:19,763:INFO:Model: PowerTransformedTargetRegressor
2022-08-11 12:45:19,845:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:19,846:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:19,847:INFO:logged params: {}
2022-08-11 12:45:20,138:INFO:Creating Dashboard logs
2022-08-11 12:45:20,150:INFO:Model: Orthogonal Matching Pursuit
2022-08-11 12:45:20,225:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:20,226:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:20,226:INFO:logged params: {}
2022-08-11 12:45:20,476:INFO:Creating Dashboard logs
2022-08-11 12:45:20,490:INFO:Model: Lasso Regression
2022-08-11 12:45:20,568:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:20,568:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:20,568:INFO:logged params: {}
2022-08-11 12:45:20,800:INFO:Creating Dashboard logs
2022-08-11 12:45:20,808:INFO:Model: Elastic Net
2022-08-11 12:45:20,865:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:20,865:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:20,865:INFO:logged params: {}
2022-08-11 12:45:21,103:INFO:Creating Dashboard logs
2022-08-11 12:45:21,113:INFO:Model: Least Angle Regression
2022-08-11 12:45:21,171:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:21,172:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:21,172:INFO:logged params: {}
2022-08-11 12:45:21,389:INFO:Creating Dashboard logs
2022-08-11 12:45:21,398:INFO:Model: Dummy Regressor
2022-08-11 12:45:21,460:WARNING:Couldn't get params for model. Exception:
2022-08-11 12:45:21,460:WARNING:Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 77, in log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Leyre\anaconda3\envs\ml_pycaret\lib\site-packages\pycaret\loggers\__init__.py", line 79, in log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-08-11 12:45:21,460:INFO:logged params: {}
2022-08-11 12:45:21,710:INFO:create_model_container: 19
2022-08-11 12:45:21,711:INFO:master_model_container: 19
2022-08-11 12:45:21,711:INFO:display_container: 2
2022-08-11 12:45:21,712:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CBC97B50>,
                                task_type='CPU', verbose=False)
2022-08-11 12:45:21,712:INFO:compare_models() succesfully completed......................................
2022-08-11 12:45:21,733:INFO:Initializing tune_model()
2022-08-11 12:45:21,734:INFO:tune_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CBC97B50>,
                                task_type='CPU', verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-08-11 12:45:21,734:INFO:Checking exceptions
2022-08-11 12:45:21,734:INFO:Preparing display monitor
2022-08-11 12:45:21,785:INFO:Copying training dataset
2022-08-11 12:45:21,788:INFO:Checking base model
2022-08-11 12:45:21,789:INFO:Base model : CatBoost Regressor
2022-08-11 12:45:21,811:INFO:Declaring metric variables
2022-08-11 12:45:21,834:INFO:Defining Hyperparameters
2022-08-11 12:45:22,021:INFO:Tuning with n_jobs=-1
2022-08-11 12:45:22,021:INFO:Initializing RandomizedSearchCV
2022-08-11 12:45:38,647:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2022-08-11 12:45:38,648:INFO:Hyperparameter search completed
2022-08-11 12:45:38,648:INFO:SubProcess create_model() called ==================================
2022-08-11 12:45:38,649:INFO:Initializing create_model()
2022-08-11 12:45:38,650:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226C799EF10>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CBC6F790>, return_train_score=False, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2022-08-11 12:45:38,650:INFO:Checking exceptions
2022-08-11 12:45:38,650:INFO:Importing libraries
2022-08-11 12:45:38,650:INFO:Copying training dataset
2022-08-11 12:45:38,651:INFO:Defining folds
2022-08-11 12:45:38,652:INFO:Declaring metric variables
2022-08-11 12:45:38,669:INFO:Importing untrained model
2022-08-11 12:45:38,669:INFO:Declaring custom model
2022-08-11 12:45:38,685:INFO:CatBoost Regressor Imported succesfully
2022-08-11 12:45:38,725:INFO:Starting cross validation
2022-08-11 12:45:38,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:45:41,337:INFO:Calculating mean and std
2022-08-11 12:45:41,339:INFO:Creating metrics dataframe
2022-08-11 12:45:41,355:INFO:Finalizing model
2022-08-11 12:45:42,993:INFO:Uploading results into container
2022-08-11 12:45:42,994:INFO:Uploading model into container now
2022-08-11 12:45:42,994:INFO:create_model_container: 20
2022-08-11 12:45:42,994:INFO:master_model_container: 20
2022-08-11 12:45:42,994:INFO:display_container: 3
2022-08-11 12:45:42,994:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False)
2022-08-11 12:45:42,994:INFO:create_model() succesfully completed......................................
2022-08-11 12:45:43,098:INFO:SubProcess create_model() end ==================================
2022-08-11 12:45:43,098:INFO:Creating Dashboard logs
2022-08-11 12:45:43,110:INFO:Model: CatBoost Regressor
2022-08-11 12:45:43,183:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 180, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 30, 'random_strength': 0.20000000298023224, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 8, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.4000000059604645, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 256}
2022-08-11 12:45:43,253:INFO:Initializing predict_model()
2022-08-11 12:45:43,253:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-11 12:45:43,253:INFO:Checking exceptions
2022-08-11 12:45:43,253:INFO:Preloading libraries
2022-08-11 12:45:43,697:INFO:create_model_container: 20
2022-08-11 12:45:43,697:INFO:master_model_container: 20
2022-08-11 12:45:43,697:INFO:display_container: 3
2022-08-11 12:45:43,697:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False)
2022-08-11 12:45:43,698:INFO:tune_model() succesfully completed......................................
2022-08-11 12:45:43,829:INFO:Initializing create_model()
2022-08-11 12:45:43,830:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-11 12:45:43,830:INFO:Checking exceptions
2022-08-11 12:45:43,831:INFO:Preparing display monitor
2022-08-11 12:45:43,881:INFO:Importing libraries
2022-08-11 12:45:43,882:INFO:Copying training dataset
2022-08-11 12:45:43,883:INFO:Defining folds
2022-08-11 12:45:43,884:INFO:Declaring metric variables
2022-08-11 12:45:43,903:INFO:Importing untrained model
2022-08-11 12:45:43,924:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-11 12:45:43,963:INFO:Starting cross validation
2022-08-11 12:45:43,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:45:44,426:INFO:Calculating mean and std
2022-08-11 12:45:44,427:INFO:Creating metrics dataframe
2022-08-11 12:45:44,440:INFO:Finalizing model
2022-08-11 12:45:44,661:INFO:Creating Dashboard logs
2022-08-11 12:45:44,683:INFO:Model: Light Gradient Boosting Machine
2022-08-11 12:45:44,749:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-08-11 12:45:44,802:INFO:Initializing predict_model()
2022-08-11 12:45:44,802:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-11 12:45:44,802:INFO:Checking exceptions
2022-08-11 12:45:44,802:INFO:Preloading libraries
2022-08-11 12:45:45,276:INFO:Uploading results into container
2022-08-11 12:45:45,276:INFO:Uploading model into container now
2022-08-11 12:45:45,287:INFO:create_model_container: 21
2022-08-11 12:45:45,288:INFO:master_model_container: 21
2022-08-11 12:45:45,288:INFO:display_container: 4
2022-08-11 12:45:45,290:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-11 12:45:45,291:INFO:create_model() succesfully completed......................................
2022-08-11 12:45:45,433:INFO:Initializing tune_model()
2022-08-11 12:45:45,434:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-08-11 12:45:45,434:INFO:Checking exceptions
2022-08-11 12:45:45,435:INFO:Preparing display monitor
2022-08-11 12:45:45,477:INFO:Copying training dataset
2022-08-11 12:45:45,480:INFO:Checking base model
2022-08-11 12:45:45,481:INFO:Base model : Light Gradient Boosting Machine
2022-08-11 12:45:45,499:INFO:Declaring metric variables
2022-08-11 12:45:45,515:INFO:Defining Hyperparameters
2022-08-11 12:45:45,634:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2022-08-11 12:45:45,634:INFO:Tuning with n_jobs=-1
2022-08-11 12:45:45,634:INFO:Initializing RandomizedSearchCV
2022-08-11 12:45:50,600:INFO:best_params: {'actual_estimator__num_leaves': 30, 'actual_estimator__max_depth': 80, 'actual_estimator__learning_rate': 0.7000000000000001}
2022-08-11 12:45:50,601:INFO:Hyperparameter search completed
2022-08-11 12:45:50,602:INFO:SubProcess create_model() called ==================================
2022-08-11 12:45:50,604:INFO:Initializing create_model()
2022-08-11 12:45:50,604:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000226CD33B220>, return_train_score=False, kwargs={'num_leaves': 30, 'max_depth': 80, 'learning_rate': 0.7000000000000001})
2022-08-11 12:45:50,604:INFO:Checking exceptions
2022-08-11 12:45:50,604:INFO:Importing libraries
2022-08-11 12:45:50,604:INFO:Copying training dataset
2022-08-11 12:45:50,605:INFO:Defining folds
2022-08-11 12:45:50,606:INFO:Declaring metric variables
2022-08-11 12:45:50,617:INFO:Importing untrained model
2022-08-11 12:45:50,618:INFO:Declaring custom model
2022-08-11 12:45:50,631:INFO:Light Gradient Boosting Machine Imported succesfully
2022-08-11 12:45:50,663:INFO:Starting cross validation
2022-08-11 12:45:50,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:45:50,971:INFO:Calculating mean and std
2022-08-11 12:45:50,973:INFO:Creating metrics dataframe
2022-08-11 12:45:50,989:INFO:Finalizing model
2022-08-11 12:45:51,209:INFO:Uploading results into container
2022-08-11 12:45:51,210:INFO:Uploading model into container now
2022-08-11 12:45:51,210:INFO:create_model_container: 22
2022-08-11 12:45:51,210:INFO:master_model_container: 22
2022-08-11 12:45:51,211:INFO:display_container: 5
2022-08-11 12:45:51,216:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-11 12:45:51,216:INFO:create_model() succesfully completed......................................
2022-08-11 12:45:51,336:INFO:SubProcess create_model() end ==================================
2022-08-11 12:45:51,336:INFO:Creating Dashboard logs
2022-08-11 12:45:51,346:INFO:Model: Light Gradient Boosting Machine
2022-08-11 12:45:51,400:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.7000000000000001, 'max_depth': 80, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 30, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-08-11 12:45:51,463:INFO:Initializing predict_model()
2022-08-11 12:45:51,463:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-11 12:45:51,464:INFO:Checking exceptions
2022-08-11 12:45:51,464:INFO:Preloading libraries
2022-08-11 12:45:51,948:INFO:create_model_container: 22
2022-08-11 12:45:51,948:INFO:master_model_container: 22
2022-08-11 12:45:51,949:INFO:display_container: 5
2022-08-11 12:45:51,954:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.7000000000000001, max_depth=80,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=30, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True...
                                                        learning_rate=0.7000000000000001,
                                                        max_depth=80,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=30,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-08-11 12:45:51,954:INFO:tune_model() succesfully completed......................................
2022-08-11 12:45:52,094:INFO:Initializing plot_model()
2022-08-11 12:45:52,094:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals_interactive, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-11 12:45:52,094:INFO:Checking exceptions
2022-08-11 12:45:52,095:INFO:Preparing display monitor
2022-08-11 12:45:52,117:INFO:Preloading libraries
2022-08-11 12:45:52,121:INFO:Copying training dataset
2022-08-11 12:45:52,123:INFO:Copying test dataset
2022-08-11 12:45:52,124:INFO:Plot type: residuals_interactive
2022-08-11 12:45:52,179:INFO:Calculated model residuals
2022-08-11 12:45:59,816:INFO:Calculated Tunkey-Anscombe Plot
2022-08-11 12:46:00,701:INFO:Calculated Normal QQ Plot
2022-08-11 12:46:03,184:INFO:Calculated Scale-Location Plot
2022-08-11 12:46:03,635:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-08-11 12:46:03,734:INFO:Visual Rendered Successfully
2022-08-11 12:46:03,885:INFO:plot_model() succesfully completed......................................
2022-08-11 12:46:03,905:INFO:Initializing plot_model()
2022-08-11 12:46:03,905:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-11 12:46:03,905:INFO:Checking exceptions
2022-08-11 12:46:03,906:INFO:Preparing display monitor
2022-08-11 12:46:03,923:INFO:Preloading libraries
2022-08-11 12:46:03,929:INFO:Copying training dataset
2022-08-11 12:46:03,930:INFO:Copying test dataset
2022-08-11 12:46:03,931:INFO:Plot type: feature
2022-08-11 12:46:03,935:WARNING:No coef_ found. Trying feature_importances_
2022-08-11 12:46:04,266:INFO:Visual Rendered Successfully
2022-08-11 12:46:04,438:INFO:plot_model() succesfully completed......................................
2022-08-11 12:46:04,458:INFO:Initializing plot_model()
2022-08-11 12:46:04,458:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=error, plot_kwargs=None, save=False, scale=1, system=True)
2022-08-11 12:46:04,459:INFO:Checking exceptions
2022-08-11 12:46:04,459:INFO:Preparing display monitor
2022-08-11 12:46:04,474:INFO:Preloading libraries
2022-08-11 12:46:04,478:INFO:Copying training dataset
2022-08-11 12:46:04,479:INFO:Copying test dataset
2022-08-11 12:46:04,480:INFO:Plot type: error
2022-08-11 12:46:04,616:INFO:Fitting Model
2022-08-11 12:46:04,622:INFO:Scoring test/hold-out set
2022-08-11 12:46:05,813:INFO:Visual Rendered Successfully
2022-08-11 12:46:05,976:INFO:plot_model() succesfully completed......................................
2022-08-11 12:46:06,000:INFO:Initializing evaluate_model()
2022-08-11 12:46:06,000:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-08-11 12:46:06,047:INFO:Initializing plot_model()
2022-08-11 12:46:06,047:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-08-11 12:46:06,047:INFO:Checking exceptions
2022-08-11 12:46:06,048:INFO:Preparing display monitor
2022-08-11 12:46:06,059:INFO:Preloading libraries
2022-08-11 12:46:06,061:INFO:Copying training dataset
2022-08-11 12:46:06,062:INFO:Copying test dataset
2022-08-11 12:46:06,063:INFO:Plot type: parameter
2022-08-11 12:46:06,077:INFO:Visual Rendered Successfully
2022-08-11 12:46:06,227:INFO:plot_model() succesfully completed......................................
2022-08-11 12:46:06,249:INFO:Initializing predict_model()
2022-08-11 12:46:06,250:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-08-11 12:46:06,250:INFO:Checking exceptions
2022-08-11 12:46:06,251:INFO:Preloading libraries
2022-08-11 12:46:06,251:INFO:Preparing display monitor
2022-08-11 12:46:06,986:INFO:Initializing finalize_model()
2022-08-11 12:46:06,986:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-08-11 12:46:06,987:INFO:Finalizing PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False)
2022-08-11 12:46:06,988:INFO:Initializing create_model()
2022-08-11 12:46:06,988:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226CD7FE310>,
                                task_type='CPU', verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-08-11 12:46:06,989:INFO:Checking exceptions
2022-08-11 12:46:06,989:INFO:Importing libraries
2022-08-11 12:46:06,989:INFO:Copying training dataset
2022-08-11 12:46:06,990:INFO:Defining folds
2022-08-11 12:46:06,991:INFO:Declaring metric variables
2022-08-11 12:46:06,991:INFO:Importing untrained model
2022-08-11 12:46:06,991:INFO:Declaring custom model
2022-08-11 12:46:06,993:INFO:CatBoost Regressor Imported succesfully
2022-08-11 12:46:06,993:INFO:Starting cross validation
2022-08-11 12:46:06,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 12:46:11,839:INFO:Calculating mean and std
2022-08-11 12:46:11,840:INFO:Creating metrics dataframe
2022-08-11 12:46:11,845:INFO:Finalizing model
2022-08-11 12:46:12,670:INFO:create_model_container: 22
2022-08-11 12:46:12,670:INFO:master_model_container: 22
2022-08-11 12:46:12,670:INFO:display_container: 7
2022-08-11 12:46:12,671:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                task_type='CPU', verbose=False)
2022-08-11 12:46:12,671:INFO:create_model() succesfully completed......................................
2022-08-11 12:46:12,820:INFO:Creating Dashboard logs
2022-08-11 12:46:12,820:INFO:Model: CatBoost Regressor
2022-08-11 12:46:12,859:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 180, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 30, 'random_strength': 0.20000000298023224, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 8, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.4000000059604645, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 256}
2022-08-11 12:46:12,937:INFO:Initializing predict_model()
2022-08-11 12:46:12,938:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2022-08-11 12:46:12,938:INFO:Checking exceptions
2022-08-11 12:46:12,938:INFO:Preloading libraries
2022-08-11 12:46:13,572:INFO:create_model_container: 22
2022-08-11 12:46:13,572:INFO:master_model_container: 22
2022-08-11 12:46:13,572:INFO:display_container: 6
2022-08-11 12:46:13,572:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                task_type='CPU', verbose=False)
2022-08-11 12:46:13,572:INFO:finalize_model() succesfully completed......................................
2022-08-11 12:46:13,703:INFO:Initializing save_model()
2022-08-11 12:46:13,703:INFO:save_model(model=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                task_type='CPU', verbose=False), model_name=diamond-pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-08-11 12:46:13,703:INFO:Adding model into prep_pipe
2022-08-11 12:46:13,717:INFO:diamond-pipeline.pkl saved in current working directory
2022-08-11 12:46:13,726:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ['trained_model',
                 PowerTransformedTargetRegressor(border_count=254, depth=8,
                                                 eta=0.4, l2_leaf_reg=30,
                                                 loss_function='RMSE',
                                                 n_estimators=180,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=123,
                                                 random_strength=0.2,
                                                 regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                                 task_type='CPU',
                                                 verbose=False)]],
         verbose=False)
2022-08-11 12:46:13,726:INFO:save_model() successfully completed......................................
2022-08-11 12:46:13,876:INFO:Initializing predict_model()
2022-08-11 12:46:13,876:INFO:predict_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x00000226D82B9940>,
                                task_type='CPU', verbose=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-08-11 12:46:13,876:INFO:Checking exceptions
2022-08-11 12:46:13,876:INFO:Preloading libraries
2022-08-11 12:46:13,877:INFO:Preparing display monitor
